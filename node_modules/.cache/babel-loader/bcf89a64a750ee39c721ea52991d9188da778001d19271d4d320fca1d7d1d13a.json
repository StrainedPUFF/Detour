{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wesle\\\\OneDrive\\\\Documents\\\\VLCS\\\\myProject\\\\VirtualLCS\\\\frontend\\\\src\\\\AudioChat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useCallback, useMemo } from 'react';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioChat = ({\n  sessionId\n}) => {\n  _s();\n  const audioRef = useRef(null);\n  const socket = useRef(io('http://localhost:8080')).current; // Persist socket instance\n\n  // Memoized `peerConnections` object to prevent it from being re-initialized on every render\n  const peerConnections = useMemo(() => ({}), []);\n\n  // Memoized WebRTC configuration\n  const config = useMemo(() => ({\n    iceServers: [{\n      urls: 'stun:stun.l.google.com:19302'\n    }]\n  }), []);\n\n  // Memoized event handlers\n  const handleOffer = useCallback(offer => {\n    const peerConnection = new RTCPeerConnection(config);\n    peerConnections[offer.sender] = peerConnection;\n    peerConnection.setRemoteDescription(new RTCSessionDescription(offer));\n    navigator.mediaDevices.getUserMedia({\n      audio: true\n    }).then(stream => {\n      stream.getTracks().forEach(track => peerConnection.addTrack(track, stream));\n    });\n    peerConnection.createAnswer().then(answer => {\n      peerConnection.setLocalDescription(answer);\n      socket.emit('answer', {\n        type: 'answer',\n        sdp: answer,\n        sender: socket.id\n      });\n    });\n    peerConnection.ontrack = event => {\n      audioRef.current.srcObject = event.streams[0];\n    };\n    peerConnection.onicecandidate = event => {\n      if (event.candidate) {\n        socket.emit('ice-candidate', {\n          type: 'candidate',\n          candidate: event.candidate,\n          sender: socket.id\n        });\n      }\n    };\n  }, [config, peerConnections, socket]);\n  const handleAnswer = useCallback(answer => {\n    const peerConnection = peerConnections[answer.sender];\n    peerConnection.setRemoteDescription(new RTCSessionDescription(answer));\n  }, [peerConnections]);\n  const handleNewICECandidateMsg = useCallback(msg => {\n    const candidate = new RTCIceCandidate(msg.candidate);\n    const peerConnection = peerConnections[msg.sender];\n    peerConnection.addIceCandidate(candidate);\n  }, [peerConnections]);\n\n  // Main `useEffect` for socket event listeners and media setup\n  useEffect(() => {\n    socket.on('offer', handleOffer);\n    socket.on('answer', handleAnswer);\n    socket.on('ice-candidate', handleNewICECandidateMsg);\n    navigator.mediaDevices.getUserMedia({\n      audio: true\n    }).then(stream => {\n      audioRef.current.srcObject = stream;\n      socket.emit('join', sessionId);\n    });\n\n    // Cleanup function to prevent memory leaks\n    return () => {\n      socket.off('offer', handleOffer);\n      socket.off('answer', handleAnswer);\n      socket.off('ice-candidate', handleNewICECandidateMsg);\n      socket.disconnect();\n    };\n  }, [socket, handleOffer, handleAnswer, handleNewICECandidateMsg, sessionId]);\n  return /*#__PURE__*/_jsxDEV(\"audio\", {\n    ref: audioRef,\n    autoPlay: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 10\n  }, this);\n};\n_s(AudioChat, \"vbi1e82eFOkZ/deFY8JCJ2VPn98=\");\n_c = AudioChat;\nexport default AudioChat;\nvar _c;\n$RefreshReg$(_c, \"AudioChat\");","map":{"version":3,"names":["React","useRef","useEffect","useCallback","useMemo","io","jsxDEV","_jsxDEV","AudioChat","sessionId","_s","audioRef","socket","current","peerConnections","config","iceServers","urls","handleOffer","offer","peerConnection","RTCPeerConnection","sender","setRemoteDescription","RTCSessionDescription","navigator","mediaDevices","getUserMedia","audio","then","stream","getTracks","forEach","track","addTrack","createAnswer","answer","setLocalDescription","emit","type","sdp","id","ontrack","event","srcObject","streams","onicecandidate","candidate","handleAnswer","handleNewICECandidateMsg","msg","RTCIceCandidate","addIceCandidate","on","off","disconnect","ref","autoPlay","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/wesle/OneDrive/Documents/VLCS/myProject/VirtualLCS/frontend/src/AudioChat.jsx"],"sourcesContent":["import React, { useRef, useEffect, useCallback, useMemo } from 'react';\r\nimport io from 'socket.io-client';\r\n\r\nconst AudioChat = ({ sessionId }) => {\r\n  const audioRef = useRef(null);\r\n  const socket = useRef(io('http://localhost:8080')).current; // Persist socket instance\r\n\r\n  // Memoized `peerConnections` object to prevent it from being re-initialized on every render\r\n  const peerConnections = useMemo(() => ({}), []);\r\n\r\n  // Memoized WebRTC configuration\r\n  const config = useMemo(() => ({\r\n    iceServers: [{ urls: 'stun:stun.l.google.com:19302' }]\r\n  }), []);\r\n\r\n  // Memoized event handlers\r\n  const handleOffer = useCallback((offer) => {\r\n    const peerConnection = new RTCPeerConnection(config);\r\n    peerConnections[offer.sender] = peerConnection;\r\n    peerConnection.setRemoteDescription(new RTCSessionDescription(offer));\r\n    navigator.mediaDevices.getUserMedia({ audio: true })\r\n      .then(stream => {\r\n        stream.getTracks().forEach(track => peerConnection.addTrack(track, stream));\r\n      });\r\n    peerConnection.createAnswer()\r\n      .then(answer => {\r\n        peerConnection.setLocalDescription(answer);\r\n        socket.emit('answer', { type: 'answer', sdp: answer, sender: socket.id });\r\n      });\r\n    peerConnection.ontrack = (event) => {\r\n      audioRef.current.srcObject = event.streams[0];\r\n    };\r\n    peerConnection.onicecandidate = (event) => {\r\n      if (event.candidate) {\r\n        socket.emit('ice-candidate', { type: 'candidate', candidate: event.candidate, sender: socket.id });\r\n      }\r\n    };\r\n  }, [config, peerConnections, socket]);\r\n\r\n  const handleAnswer = useCallback((answer) => {\r\n    const peerConnection = peerConnections[answer.sender];\r\n    peerConnection.setRemoteDescription(new RTCSessionDescription(answer));\r\n  }, [peerConnections]);\r\n\r\n  const handleNewICECandidateMsg = useCallback((msg) => {\r\n    const candidate = new RTCIceCandidate(msg.candidate);\r\n    const peerConnection = peerConnections[msg.sender];\r\n    peerConnection.addIceCandidate(candidate);\r\n  }, [peerConnections]);\r\n\r\n  // Main `useEffect` for socket event listeners and media setup\r\n  useEffect(() => {\r\n    socket.on('offer', handleOffer);\r\n    socket.on('answer', handleAnswer);\r\n    socket.on('ice-candidate', handleNewICECandidateMsg);\r\n\r\n    navigator.mediaDevices.getUserMedia({ audio: true })\r\n      .then(stream => {\r\n        audioRef.current.srcObject = stream;\r\n        socket.emit('join', sessionId);\r\n      });\r\n\r\n    // Cleanup function to prevent memory leaks\r\n    return () => {\r\n      socket.off('offer', handleOffer);\r\n      socket.off('answer', handleAnswer);\r\n      socket.off('ice-candidate', handleNewICECandidateMsg);\r\n      socket.disconnect();\r\n    };\r\n  }, [socket, handleOffer, handleAnswer, handleNewICECandidateMsg, sessionId]);\r\n\r\n  return <audio ref={audioRef} autoPlay />;\r\n};\r\n\r\nexport default AudioChat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}