{"ast":null,"code":"import React,{useState,useRef,useEffect}from'react';import io from'socket.io-client';import{Canvas,Image,util}from'fabric';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const DocumentCanvas=_ref=>{let{documentUrl}=_ref;const canvasRef=useRef(null);// eslint-disable-next-line\nconst[canvas,setCanvas]=useState(null);useEffect(()=>{console.log('Initializing canvas...');// Create a Fabric.js canvas instance\nconst canvasInstance=new Canvas(canvasRef.current);setCanvas(canvasInstance);// Load the background image\nif(documentUrl){Image.fromURL(documentUrl,img=>{canvasInstance.setBackgroundImage(img,canvasInstance.renderAll.bind(canvasInstance),{crossOrigin:'anonymous'// Prevent cross-origin issues\n});console.log('Document URL:',documentUrl);},{crossOrigin:'anonymous'}// Handle cross-origin images\n);}else{console.warn('No document URL provided.');}// Set up WebSocket connection\nconst socket=io('http://localhost:8080');socket.on('connect',()=>{console.log('Connected to WebSocket server.');});// Handle WebSocket errors\nsocket.on('connect_error',error=>{console.error('WebSocket connection error:',error.message);});// Listen for drawing data from the server\nsocket.on('draw',data=>{console.log('Received draw data:',data);util.enlivenObjects([data],objects=>{objects.forEach(obj=>{if(canvasInstance){canvasInstance.add(obj);}});});});// Emit data when an object is added to the canvas\nconst emitObjectData=object=>{try{if(socket){socket.emit('draw',object.toJSON());console.log('Object emitted:',object);}}catch(error){console.error('Error emitting object data:',error.message);}};canvasInstance.on('object:added',e=>{const object=e.target;emitObjectData(object);});// Cleanup on component unmount\nreturn()=>{canvasInstance.dispose();socket.disconnect();};},[documentUrl]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"canvas\",{ref:canvasRef,width:800,height:600}),!documentUrl&&/*#__PURE__*/_jsx(\"p\",{style:{color:'red'},children:\"No document available to load.\"})]});};export default DocumentCanvas;","map":{"version":3,"names":["React","useState","useRef","useEffect","io","Canvas","Image","util","jsx","_jsx","jsxs","_jsxs","DocumentCanvas","_ref","documentUrl","canvasRef","canvas","setCanvas","console","log","canvasInstance","current","fromURL","img","setBackgroundImage","renderAll","bind","crossOrigin","warn","socket","on","error","message","data","enlivenObjects","objects","forEach","obj","add","emitObjectData","object","emit","toJSON","e","target","dispose","disconnect","children","ref","width","height","style","color"],"sources":["C:/Users/wesle/OneDrive/Documents/VLCS/myProject/VirtualLCS/frontend/src/DocumentCanvas.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\nimport { Canvas, Image, util } from 'fabric';\r\n\r\nconst DocumentCanvas = ({ documentUrl }) => {\r\n  const canvasRef = useRef(null);\r\n  // eslint-disable-next-line\r\n  const [canvas, setCanvas] = useState(null);\r\n\r\n  useEffect(() => {\r\n    console.log('Initializing canvas...');\r\n    // Create a Fabric.js canvas instance\r\n    const canvasInstance = new Canvas(canvasRef.current);\r\n    setCanvas(canvasInstance);\r\n\r\n    // Load the background image\r\n    if (documentUrl) {\r\n      Image.fromURL(\r\n        documentUrl,\r\n        (img) => {\r\n          canvasInstance.setBackgroundImage(\r\n            img,\r\n            canvasInstance.renderAll.bind(canvasInstance),\r\n            {\r\n              crossOrigin: 'anonymous', // Prevent cross-origin issues\r\n            }\r\n          );\r\n          console.log('Document URL:', documentUrl);\r\n        },\r\n        { crossOrigin: 'anonymous' } // Handle cross-origin images\r\n      );\r\n    } else {\r\n      console.warn('No document URL provided.');\r\n    }\r\n\r\n    // Set up WebSocket connection\r\n    const socket = io('http://localhost:8080');\r\n    socket.on('connect', () => {\r\n      console.log('Connected to WebSocket server.');\r\n    });\r\n\r\n    // Handle WebSocket errors\r\n    socket.on('connect_error', (error) => {\r\n      console.error('WebSocket connection error:', error.message);\r\n    });\r\n\r\n    // Listen for drawing data from the server\r\n    socket.on('draw', (data) => {\r\n      console.log('Received draw data:', data);\r\n      util.enlivenObjects([data], (objects) => {\r\n        objects.forEach((obj) => {\r\n          if (canvasInstance) {\r\n            canvasInstance.add(obj);\r\n          }\r\n        });\r\n      });\r\n    });\r\n\r\n    // Emit data when an object is added to the canvas\r\n    const emitObjectData = (object) => {\r\n      try {\r\n        if (socket) {\r\n          socket.emit('draw', object.toJSON());\r\n          console.log('Object emitted:', object);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error emitting object data:', error.message);\r\n      }\r\n    };\r\n\r\n    canvasInstance.on('object:added', (e) => {\r\n      const object = e.target;\r\n      emitObjectData(object);\r\n    });\r\n\r\n    // Cleanup on component unmount\r\n    return () => {\r\n      canvasInstance.dispose();\r\n      socket.disconnect();\r\n    };\r\n  }, [documentUrl]);\r\n\r\n  return (\r\n    <div>\r\n      <canvas ref={canvasRef} width={800} height={600} />\r\n      {!documentUrl && <p style={{ color: 'red' }}>No document available to load.</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DocumentCanvas;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}