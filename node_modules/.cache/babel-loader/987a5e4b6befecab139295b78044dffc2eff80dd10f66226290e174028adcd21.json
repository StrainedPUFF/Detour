{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wesle\\\\OneDrive\\\\Documents\\\\VLCS\\\\myProject\\\\VirtualLCS\\\\frontend\\\\src\\\\FetchSessionData.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FetchSessionData = ({\n  onSessionData\n}) => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        console.log('Fetching session data...');\n        const response = await fetch('http://127.0.0.1:8080/api/get-session-id/', {\n          credentials: 'include' // Include authentication credentials (e.g., cookies)\n        });\n        if (!response.ok) {\n          throw new Error(`Failed to fetch session data: ${response.status}`);\n        }\n        const data = await response.json();\n        if (data.error) {\n          throw new Error(data.error);\n        }\n        console.log('Fetched session data:', data);\n        onSessionData(data); // Pass data (including sessionId) to parent component\n      } catch (err) {\n        console.error('Error fetching session data:', err.message || err);\n        setError(err.message || 'An unknown error occurred.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [onSessionData]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading session data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  }\n  return null; // No UI since data is passed to the parent\n};\n_s(FetchSessionData, \"SXWAzFwbcALCYWswwJxoaTIbO8U=\");\n_c = FetchSessionData;\nexport default FetchSessionData;\nvar _c;\n$RefreshReg$(_c, \"FetchSessionData\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","FetchSessionData","onSessionData","_s","loading","setLoading","error","setError","fetchData","console","log","response","fetch","credentials","ok","Error","status","data","json","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","_c","$RefreshReg$"],"sources":["C:/Users/wesle/OneDrive/Documents/VLCS/myProject/VirtualLCS/frontend/src/FetchSessionData.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst FetchSessionData = ({ onSessionData }) => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        console.log('Fetching session data...');\r\n        const response = await fetch('http://127.0.0.1:8080/api/get-session-id/', {\r\n          credentials: 'include', // Include authentication credentials (e.g., cookies)\r\n        });\r\n        if (!response.ok) {\r\n          throw new Error(`Failed to fetch session data: ${response.status}`);\r\n        }\r\n        const data = await response.json();\r\n        if (data.error) {\r\n          throw new Error(data.error);\r\n        }\r\n        console.log('Fetched session data:', data);\r\n        onSessionData(data); // Pass data (including sessionId) to parent component\r\n      } catch (err) {\r\n        console.error('Error fetching session data:', err.message || err);\r\n        setError(err.message || 'An unknown error occurred.');      \r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [onSessionData]);\r\n\r\n  if (loading) {\r\n    return <p>Loading session data...</p>;\r\n  }\r\n\r\n  if (error) {\r\n    return <p style={{ color: 'red' }}>Error: {error}</p>;\r\n  }\r\n\r\n  return null; // No UI since data is passed to the parent\r\n};\r\n\r\nexport default FetchSessionData;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EAC9C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMU,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACFC,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;QACvC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,2CAA2C,EAAE;UACxEC,WAAW,EAAE,SAAS,CAAE;QAC1B,CAAC,CAAC;QACF,IAAI,CAACF,QAAQ,CAACG,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,iCAAiCJ,QAAQ,CAACK,MAAM,EAAE,CAAC;QACrE;QACA,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;QAClC,IAAID,IAAI,CAACX,KAAK,EAAE;UACd,MAAM,IAAIS,KAAK,CAACE,IAAI,CAACX,KAAK,CAAC;QAC7B;QACAG,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEO,IAAI,CAAC;QAC1Cf,aAAa,CAACe,IAAI,CAAC,CAAC,CAAC;MACvB,CAAC,CAAC,OAAOE,GAAG,EAAE;QACZV,OAAO,CAACH,KAAK,CAAC,8BAA8B,EAAEa,GAAG,CAACC,OAAO,IAAID,GAAG,CAAC;QACjEZ,QAAQ,CAACY,GAAG,CAACC,OAAO,IAAI,4BAA4B,CAAC;MACvD,CAAC,SAAS;QACRf,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDG,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACN,aAAa,CAAC,CAAC;EAEnB,IAAIE,OAAO,EAAE;IACX,oBAAOJ,OAAA;MAAAqB,QAAA,EAAG;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACvC;EAEA,IAAInB,KAAK,EAAE;IACT,oBAAON,OAAA;MAAG0B,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAN,QAAA,GAAC,SAAO,EAACf,KAAK;IAAA;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EACvD;EAEA,OAAO,IAAI,CAAC,CAAC;AACf,CAAC;AAACtB,EAAA,CAxCIF,gBAAgB;AAAA2B,EAAA,GAAhB3B,gBAAgB;AA0CtB,eAAeA,gBAAgB;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}