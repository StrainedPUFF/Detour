{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wesle\\\\OneDrive\\\\Documents\\\\VLCS\\\\myProject\\\\VirtualLCS\\\\frontend\\\\src\\\\DocumentCanvas.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport { Canvas, Image, util } from 'fabric'; // Import specific Fabric.js modules\nimport { getDocument } from 'pdfjs-dist';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DocumentCanvas = ({\n  documentUrl\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const [canvas, setCanvas] = useState(null);\n  useEffect(() => {\n    console.log('Initializing canvas...');\n    const canvasInstance = new Canvas(canvasRef.current);\n    setCanvas(canvasInstance);\n\n    // Handle PDF documents\n    if (documentUrl.endsWith('.pdf')) {\n      const loadingTask = getDocument(documentUrl);\n      loadingTask.promise.then(pdf => {\n        console.log(`PDF loaded with ${pdf.numPages} pages.`);\n        return pdf.getPage(1);\n      }).then(page => {\n        const viewport = page.getViewport({\n          scale: 1.5\n        });\n        const canvasElement = document.createElement('canvas');\n        const context = canvasElement.getContext('2d');\n        canvasElement.width = viewport.width;\n        canvasElement.height = viewport.height;\n        const renderTask = page.render({\n          canvasContext: context,\n          viewport: viewport\n        });\n        return renderTask.promise.then(() => {\n          const imageUrl = canvasElement.toDataURL();\n          Image.fromURL(imageUrl, img => {\n            canvasInstance.setBackgroundImage(img, canvasInstance.renderAll.bind(canvasInstance));\n            console.log('PDF page rendered as background image.');\n          });\n        });\n      }).catch(error => {\n        console.error('Error loading PDF:', error);\n      });\n    } else {\n      console.warn('Unsupported document format or missing document URL.');\n    }\n\n    // WebSocket setup\n    const socket = io('http://localhost:3000');\n    socket.on('connect', () => {\n      console.log('Connected to WebSocket server.');\n    });\n    socket.on('draw', data => {\n      console.log('Received draw data:', data);\n      util.enlivenObjects([data], objects => {\n        objects.forEach(obj => canvasInstance.add(obj));\n      });\n    });\n    canvasInstance.on('object:added', e => {\n      const object = e.target;\n      socket.emit('draw', object.toJSON());\n      console.log('Object added:', object);\n    });\n    return () => {\n      canvasInstance.dispose();\n      socket.disconnect();\n    };\n  }, [documentUrl]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    width: 800,\n    height: 600\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 10\n  }, this);\n};\n_s(DocumentCanvas, \"O0M3y07DOrZjgMFb7j1sGn9s6P8=\");\n_c = DocumentCanvas;\nexport default DocumentCanvas;\nvar _c;\n$RefreshReg$(_c, \"DocumentCanvas\");","map":{"version":3,"names":["React","useState","useRef","useEffect","io","Canvas","Image","util","getDocument","jsxDEV","_jsxDEV","DocumentCanvas","documentUrl","_s","canvasRef","canvas","setCanvas","console","log","canvasInstance","current","endsWith","loadingTask","promise","then","pdf","numPages","getPage","page","viewport","getViewport","scale","canvasElement","document","createElement","context","getContext","width","height","renderTask","render","canvasContext","imageUrl","toDataURL","fromURL","img","setBackgroundImage","renderAll","bind","catch","error","warn","socket","on","data","enlivenObjects","objects","forEach","obj","add","e","object","target","emit","toJSON","dispose","disconnect","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/wesle/OneDrive/Documents/VLCS/myProject/VirtualLCS/frontend/src/DocumentCanvas.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\nimport { Canvas, Image, util } from 'fabric'; // Import specific Fabric.js modules\r\nimport { getDocument } from 'pdfjs-dist';\r\n\r\nconst DocumentCanvas = ({ documentUrl }) => {\r\n  const canvasRef = useRef(null);\r\n  const [canvas, setCanvas] = useState(null);\r\n\r\n  useEffect(() => {\r\n    console.log('Initializing canvas...');\r\n    const canvasInstance = new Canvas(canvasRef.current);\r\n    setCanvas(canvasInstance);\r\n\r\n    // Handle PDF documents\r\n    if (documentUrl.endsWith('.pdf')) {\r\n      const loadingTask = getDocument(documentUrl);\r\n      loadingTask.promise\r\n        .then((pdf) => {\r\n          console.log(`PDF loaded with ${pdf.numPages} pages.`);\r\n          return pdf.getPage(1);\r\n        })\r\n        .then((page) => {\r\n          const viewport = page.getViewport({ scale: 1.5 });\r\n          const canvasElement = document.createElement('canvas');\r\n          const context = canvasElement.getContext('2d');\r\n          canvasElement.width = viewport.width;\r\n          canvasElement.height = viewport.height;\r\n\r\n          const renderTask = page.render({\r\n            canvasContext: context,\r\n            viewport: viewport,\r\n          });\r\n\r\n          return renderTask.promise.then(() => {\r\n            const imageUrl = canvasElement.toDataURL();\r\n            Image.fromURL(imageUrl, (img) => {\r\n              canvasInstance.setBackgroundImage(img, canvasInstance.renderAll.bind(canvasInstance));\r\n              console.log('PDF page rendered as background image.');\r\n            });\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error loading PDF:', error);\r\n        });\r\n    } else {\r\n      console.warn('Unsupported document format or missing document URL.');\r\n    }\r\n\r\n    // WebSocket setup\r\n    const socket = io('http://localhost:3000');\r\n    socket.on('connect', () => {\r\n      console.log('Connected to WebSocket server.');\r\n    });\r\n\r\n    socket.on('draw', (data) => {\r\n      console.log('Received draw data:', data);\r\n      util.enlivenObjects([data], (objects) => {\r\n        objects.forEach((obj) => canvasInstance.add(obj));\r\n      });\r\n    });\r\n\r\n    canvasInstance.on('object:added', (e) => {\r\n      const object = e.target;\r\n      socket.emit('draw', object.toJSON());\r\n      console.log('Object added:', object);\r\n    });\r\n\r\n    return () => {\r\n      canvasInstance.dispose();\r\n      socket.disconnect();\r\n    };\r\n  }, [documentUrl]);\r\n\r\n  return <canvas ref={canvasRef} width={800} height={600} />;\r\n};\r\n\r\nexport default DocumentCanvas;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}