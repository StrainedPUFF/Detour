{"ast":null,"code":"import React,{useState,useRef,useEffect}from'react';import io from'socket.io-client';import{Canvas,Image,util}from'fabric';import{jsx as _jsx}from\"react/jsx-runtime\";const DocumentCanvas=_ref=>{let{documentUrl}=_ref;const canvasRef=useRef(null);// eslint-disable-next-line no-unused-vars\nconst[canvas,setCanvas]=useState(null);useEffect(()=>{console.log('Initializing canvas...');// Create a Fabric.js canvas instance\nconst canvasInstance=new Canvas(canvasRef.current);setCanvas(canvasInstance);// Load the background image\nImage.fromURL(documentUrl,img=>{canvasInstance.setBackgroundImage(img,canvasInstance.renderAll.bind(canvasInstance));console.log('Document URL:',documentUrl);});// Set up WebSocket connection\nconst socket=io('http://localhost:8080');socket.on('connect',()=>{console.log('Connected to WebSocket server.');});// Listen for drawing data from the server\nsocket.on('draw',data=>{console.log('Received draw data:',data);util.enlivenObjects([data],objects=>{objects.forEach(obj=>canvasInstance.add(obj));});});// Emit data when an object is added to the canvas\ncanvasInstance.on('object:added',e=>{const object=e.target;socket.emit('draw',object.toJSON());console.log('Object added:',object);});// Clean up on component unmount\nreturn()=>{canvasInstance.dispose();socket.disconnect();};},[documentUrl]);return/*#__PURE__*/_jsx(\"canvas\",{ref:canvasRef,width:800,height:600});};export default DocumentCanvas;","map":{"version":3,"names":["React","useState","useRef","useEffect","io","Canvas","Image","util","jsx","_jsx","DocumentCanvas","_ref","documentUrl","canvasRef","canvas","setCanvas","console","log","canvasInstance","current","fromURL","img","setBackgroundImage","renderAll","bind","socket","on","data","enlivenObjects","objects","forEach","obj","add","e","object","target","emit","toJSON","dispose","disconnect","ref","width","height"],"sources":["C:/Users/wesle/OneDrive/Documents/VLCS/myProject/VirtualLCS/frontend/src/DocumentCanvas.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\nimport { Canvas, Image, util } from 'fabric';\r\n\r\nconst DocumentCanvas = ({ documentUrl }) => {\r\n  const canvasRef = useRef(null);\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [canvas, setCanvas] = useState(null);\r\n\r\n  useEffect(() => {\r\n    console.log('Initializing canvas...');\r\n    // Create a Fabric.js canvas instance\r\n    const canvasInstance = new Canvas(canvasRef.current);\r\n    setCanvas(canvasInstance);\r\n\r\n    // Load the background image\r\n    Image.fromURL(documentUrl, (img) => {\r\n      canvasInstance.setBackgroundImage(img, canvasInstance.renderAll.bind(canvasInstance));\r\n      console.log('Document URL:', documentUrl);\r\n    });\r\n\r\n    // Set up WebSocket connection\r\n    const socket = io('http://localhost:8080');\r\n    socket.on('connect', () => {\r\n      console.log('Connected to WebSocket server.');\r\n    });\r\n\r\n    // Listen for drawing data from the server\r\n    socket.on('draw', (data) => {\r\n      console.log('Received draw data:', data);\r\n      util.enlivenObjects([data], (objects) => {\r\n        objects.forEach((obj) => canvasInstance.add(obj));\r\n      });\r\n    });\r\n\r\n    // Emit data when an object is added to the canvas\r\n    canvasInstance.on('object:added', (e) => {\r\n      const object = e.target;\r\n      socket.emit('draw', object.toJSON());\r\n      console.log('Object added:', object);\r\n    });\r\n\r\n    // Clean up on component unmount\r\n    return () => {\r\n      canvasInstance.dispose();\r\n      socket.disconnect();\r\n    };\r\n  }, [documentUrl]);\r\n\r\n  return <canvas ref={canvasRef} width={800} height={600} />;\r\n};\r\n\r\nexport default DocumentCanvas;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,MAAM,CAAEC,SAAS,KAAQ,OAAO,CAC1D,MAAO,CAAAC,EAAE,KAAM,kBAAkB,CACjC,OAASC,MAAM,CAAEC,KAAK,CAAEC,IAAI,KAAQ,QAAQ,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE7C,KAAM,CAAAC,cAAc,CAAGC,IAAA,EAAqB,IAApB,CAAEC,WAAY,CAAC,CAAAD,IAAA,CACrC,KAAM,CAAAE,SAAS,CAAGX,MAAM,CAAC,IAAI,CAAC,CAC9B;AACA,KAAM,CAACY,MAAM,CAAEC,SAAS,CAAC,CAAGd,QAAQ,CAAC,IAAI,CAAC,CAE1CE,SAAS,CAAC,IAAM,CACda,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC,CACrC;AACA,KAAM,CAAAC,cAAc,CAAG,GAAI,CAAAb,MAAM,CAACQ,SAAS,CAACM,OAAO,CAAC,CACpDJ,SAAS,CAACG,cAAc,CAAC,CAEzB;AACAZ,KAAK,CAACc,OAAO,CAACR,WAAW,CAAGS,GAAG,EAAK,CAClCH,cAAc,CAACI,kBAAkB,CAACD,GAAG,CAAEH,cAAc,CAACK,SAAS,CAACC,IAAI,CAACN,cAAc,CAAC,CAAC,CACrFF,OAAO,CAACC,GAAG,CAAC,eAAe,CAAEL,WAAW,CAAC,CAC3C,CAAC,CAAC,CAEF;AACA,KAAM,CAAAa,MAAM,CAAGrB,EAAE,CAAC,uBAAuB,CAAC,CAC1CqB,MAAM,CAACC,EAAE,CAAC,SAAS,CAAE,IAAM,CACzBV,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC,CAC/C,CAAC,CAAC,CAEF;AACAQ,MAAM,CAACC,EAAE,CAAC,MAAM,CAAGC,IAAI,EAAK,CAC1BX,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAEU,IAAI,CAAC,CACxCpB,IAAI,CAACqB,cAAc,CAAC,CAACD,IAAI,CAAC,CAAGE,OAAO,EAAK,CACvCA,OAAO,CAACC,OAAO,CAAEC,GAAG,EAAKb,cAAc,CAACc,GAAG,CAACD,GAAG,CAAC,CAAC,CACnD,CAAC,CAAC,CACJ,CAAC,CAAC,CAEF;AACAb,cAAc,CAACQ,EAAE,CAAC,cAAc,CAAGO,CAAC,EAAK,CACvC,KAAM,CAAAC,MAAM,CAAGD,CAAC,CAACE,MAAM,CACvBV,MAAM,CAACW,IAAI,CAAC,MAAM,CAAEF,MAAM,CAACG,MAAM,CAAC,CAAC,CAAC,CACpCrB,OAAO,CAACC,GAAG,CAAC,eAAe,CAAEiB,MAAM,CAAC,CACtC,CAAC,CAAC,CAEF;AACA,MAAO,IAAM,CACXhB,cAAc,CAACoB,OAAO,CAAC,CAAC,CACxBb,MAAM,CAACc,UAAU,CAAC,CAAC,CACrB,CAAC,CACH,CAAC,CAAE,CAAC3B,WAAW,CAAC,CAAC,CAEjB,mBAAOH,IAAA,WAAQ+B,GAAG,CAAE3B,SAAU,CAAC4B,KAAK,CAAE,GAAI,CAACC,MAAM,CAAE,GAAI,CAAE,CAAC,CAC5D,CAAC,CAED,cAAe,CAAAhC,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}