{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wesle\\\\OneDrive\\\\Documents\\\\VLCS\\\\myProject\\\\VirtualLCS\\\\frontend\\\\src\\\\SessionContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport FetchSessionData from './FetchSessionData'; // Adjust the path if needed\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SessionContext = /*#__PURE__*/createContext();\nexport const SessionProvider = ({\n  children\n}) => {\n  _s();\n  const [sessionData, setSessionData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const handleSessionData = data => {\n    setSessionData({\n      sessionId: data.id,\n      documentUrl: data.document,\n      quiz_id: data.quiz_id\n    });\n    setLoading(false); // Set loading to false once data is received\n  };\n  const handleError = error => {\n    setError(error);\n    setLoading(false); // Set loading to false on error\n  };\n  useEffect(() => {\n    // You can also handle cleanup or additional logic here if needed\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(FetchSessionData, {\n      onSessionData: handleSessionData,\n      onError: handleError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading session...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this), sessionData && /*#__PURE__*/_jsxDEV(SessionContext.Provider, {\n      value: sessionData,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n// Hook to access the SessionContext\n_s(SessionProvider, \"iny8GZmz5pw1HaBF3Ckp2rKD9mo=\");\n_c = SessionProvider;\nexport const useSession = () => {\n  _s2();\n  return useContext(SessionContext);\n};\n_s2(useSession, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"SessionProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","FetchSessionData","jsxDEV","_jsxDEV","Fragment","_Fragment","SessionContext","SessionProvider","children","_s","sessionData","setSessionData","loading","setLoading","error","setError","handleSessionData","data","sessionId","id","documentUrl","document","quiz_id","handleError","onSessionData","onError","fileName","_jsxFileName","lineNumber","columnNumber","style","color","message","Provider","value","_c","useSession","_s2","$RefreshReg$"],"sources":["C:/Users/wesle/OneDrive/Documents/VLCS/myProject/VirtualLCS/frontend/src/SessionContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport FetchSessionData from './FetchSessionData'; // Adjust the path if needed\r\n\r\nconst SessionContext = createContext();\r\n\r\nexport const SessionProvider = ({ children }) => {\r\n  const [sessionData, setSessionData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleSessionData = (data) => {\r\n    setSessionData({\r\n      sessionId: data.id,\r\n      documentUrl: data.document,\r\n      quiz_id: data.quiz_id,\r\n    });\r\n    setLoading(false); // Set loading to false once data is received\r\n  };\r\n\r\n  const handleError = (error) => {\r\n    setError(error);\r\n    setLoading(false); // Set loading to false on error\r\n  };\r\n\r\n  useEffect(() => {\r\n    // You can also handle cleanup or additional logic here if needed\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <FetchSessionData onSessionData={handleSessionData} onError={handleError} />\r\n      {loading && <p>Loading session...</p>}\r\n      {error && <p style={{ color: 'red' }}>Error: {error.message}</p>}\r\n      {sessionData && (\r\n        <SessionContext.Provider value={sessionData}>\r\n          {children}\r\n        </SessionContext.Provider>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\n// Hook to access the SessionContext\r\nexport const useSession = () => useContext(SessionContext);"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,OAAOC,gBAAgB,MAAM,oBAAoB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnD,MAAMC,cAAc,gBAAGT,aAAa,CAAC,CAAC;AAEtC,OAAO,MAAMU,eAAe,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC/C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMiB,iBAAiB,GAAIC,IAAI,IAAK;IAClCN,cAAc,CAAC;MACbO,SAAS,EAAED,IAAI,CAACE,EAAE;MAClBC,WAAW,EAAEH,IAAI,CAACI,QAAQ;MAC1BC,OAAO,EAAEL,IAAI,CAACK;IAChB,CAAC,CAAC;IACFT,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;EACrB,CAAC;EAED,MAAMU,WAAW,GAAIT,KAAK,IAAK;IAC7BC,QAAQ,CAACD,KAAK,CAAC;IACfD,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;EACrB,CAAC;EAEDb,SAAS,CAAC,MAAM;IACd;EAAA,CACD,EAAE,EAAE,CAAC;EAEN,oBACEG,OAAA,CAAAE,SAAA;IAAAG,QAAA,gBACEL,OAAA,CAACF,gBAAgB;MAACuB,aAAa,EAAER,iBAAkB;MAACS,OAAO,EAAEF;IAAY;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC3EjB,OAAO,iBAAIT,OAAA;MAAAK,QAAA,EAAG;IAAkB;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EACpCf,KAAK,iBAAIX,OAAA;MAAG2B,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAvB,QAAA,GAAC,SAAO,EAACM,KAAK,CAACkB,OAAO;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC/DnB,WAAW,iBACVP,OAAA,CAACG,cAAc,CAAC2B,QAAQ;MAACC,KAAK,EAAExB,WAAY;MAAAF,QAAA,EACzCA;IAAQ;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACc,CAC1B;EAAA,eACD,CAAC;AAEP,CAAC;;AAED;AAAApB,EAAA,CArCaF,eAAe;AAAA4B,EAAA,GAAf5B,eAAe;AAsC5B,OAAO,MAAM6B,UAAU,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMvC,UAAU,CAACQ,cAAc,CAAC;AAAA;AAAC+B,GAAA,CAA9CD,UAAU;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}