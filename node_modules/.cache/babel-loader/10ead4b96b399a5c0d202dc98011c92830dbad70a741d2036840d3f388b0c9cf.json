{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wesle\\\\OneDrive\\\\Documents\\\\VLCS\\\\myProject\\\\VirtualLCS\\\\frontend\\\\src\\\\AudioChat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useCallback, useMemo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioChat = ({\n  sessionId\n}) => {\n  _s();\n  const audioRef = useRef(null);\n  const socket = useRef(null); // Persist WebSocket instance\n  const peerConnections = useMemo(() => ({}), []); // Memoized peer connections\n  const config = useMemo(() => ({\n    iceServers: [{\n      urls: 'stun:stun.l.google.com:19302'\n    }]\n  }), []);\n\n  // Memoized event handlers\n  const handleOffer = useCallback(offer => {\n    const peerConnection = new RTCPeerConnection(config);\n    peerConnections[offer.sender] = peerConnection;\n    peerConnection.setRemoteDescription(new RTCSessionDescription(offer));\n    navigator.mediaDevices.getUserMedia({\n      audio: true\n    }).then(stream => {\n      stream.getTracks().forEach(track => peerConnection.addTrack(track, stream));\n    });\n    peerConnection.createAnswer().then(answer => {\n      peerConnection.setLocalDescription(answer);\n      socket.current.send(JSON.stringify({\n        type: 'answer',\n        sdp: answer,\n        sender: 'client'\n      }));\n    });\n    peerConnection.ontrack = event => {\n      audioRef.current.srcObject = event.streams[0];\n    };\n    peerConnection.onicecandidate = event => {\n      if (event.candidate) {\n        socket.current.send(JSON.stringify({\n          type: 'ice-candidate',\n          candidate: event.candidate,\n          sender: 'client'\n        }));\n      }\n    };\n  }, [config, peerConnections]);\n  const handleAnswer = useCallback(answer => {\n    const peerConnection = peerConnections[answer.sender];\n    peerConnection.setRemoteDescription(new RTCSessionDescription(answer));\n  }, [peerConnections]);\n  const handleNewICECandidateMsg = useCallback(msg => {\n    const candidate = new RTCIceCandidate(msg.candidate);\n    const peerConnection = peerConnections[msg.sender];\n    peerConnection.addIceCandidate(candidate);\n  }, [peerConnections]);\n\n  // WebSocket setup and cleanup\n  useEffect(() => {\n    socket.current = new WebSocket(`ws://localhost:8080/ws/session/${sessionId}/`);\n    socket.current.onopen = () => {\n      console.log('WebSocket connection established');\n      socket.current.send(JSON.stringify({\n        type: 'join',\n        sessionId\n      }));\n    };\n    socket.current.onmessage = event => {\n      const data = JSON.parse(event.data);\n      if (data.type === 'offer') {\n        handleOffer(data);\n      } else if (data.type === 'answer') {\n        handleAnswer(data);\n      } else if (data.type === 'ice-candidate') {\n        handleNewICECandidateMsg(data);\n      }\n    };\n    socket.current.onclose = () => {\n      console.log('WebSocket connection closed');\n    };\n\n    // Cleanup\n    return () => {\n      socket.current.close();\n    };\n  }, [sessionId, handleOffer, handleAnswer, handleNewICECandidateMsg]);\n  return /*#__PURE__*/_jsxDEV(\"audio\", {\n    ref: audioRef,\n    autoPlay: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 10\n  }, this);\n};\n_s(AudioChat, \"+/WKE4j0cULfjmwHPEvFtXZqI68=\");\n_c = AudioChat;\nexport default AudioChat;\nvar _c;\n$RefreshReg$(_c, \"AudioChat\");","map":{"version":3,"names":["React","useRef","useEffect","useCallback","useMemo","jsxDEV","_jsxDEV","AudioChat","sessionId","_s","audioRef","socket","peerConnections","config","iceServers","urls","handleOffer","offer","peerConnection","RTCPeerConnection","sender","setRemoteDescription","RTCSessionDescription","navigator","mediaDevices","getUserMedia","audio","then","stream","getTracks","forEach","track","addTrack","createAnswer","answer","setLocalDescription","current","send","JSON","stringify","type","sdp","ontrack","event","srcObject","streams","onicecandidate","candidate","handleAnswer","handleNewICECandidateMsg","msg","RTCIceCandidate","addIceCandidate","WebSocket","onopen","console","log","onmessage","data","parse","onclose","close","ref","autoPlay","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/wesle/OneDrive/Documents/VLCS/myProject/VirtualLCS/frontend/src/AudioChat.jsx"],"sourcesContent":["import React, { useRef, useEffect, useCallback, useMemo } from 'react';\r\n\r\nconst AudioChat = ({ sessionId }) => {\r\n  const audioRef = useRef(null);\r\n  const socket = useRef(null); // Persist WebSocket instance\r\n  const peerConnections = useMemo(() => ({}), []); // Memoized peer connections\r\n  const config = useMemo(() => ({\r\n    iceServers: [{ urls: 'stun:stun.l.google.com:19302' }]\r\n  }), []);\r\n\r\n  // Memoized event handlers\r\n  const handleOffer = useCallback((offer) => {\r\n    const peerConnection = new RTCPeerConnection(config);\r\n    peerConnections[offer.sender] = peerConnection;\r\n\r\n    peerConnection.setRemoteDescription(new RTCSessionDescription(offer));\r\n    navigator.mediaDevices.getUserMedia({ audio: true })\r\n      .then(stream => {\r\n        stream.getTracks().forEach(track => peerConnection.addTrack(track, stream));\r\n      });\r\n    peerConnection.createAnswer()\r\n      .then(answer => {\r\n        peerConnection.setLocalDescription(answer);\r\n        socket.current.send(JSON.stringify({\r\n          type: 'answer',\r\n          sdp: answer,\r\n          sender: 'client'\r\n        }));\r\n      });\r\n    peerConnection.ontrack = (event) => {\r\n      audioRef.current.srcObject = event.streams[0];\r\n    };\r\n    peerConnection.onicecandidate = (event) => {\r\n      if (event.candidate) {\r\n        socket.current.send(JSON.stringify({\r\n          type: 'ice-candidate',\r\n          candidate: event.candidate,\r\n          sender: 'client'\r\n        }));\r\n      }\r\n    };\r\n  }, [config, peerConnections]);\r\n\r\n  const handleAnswer = useCallback((answer) => {\r\n    const peerConnection = peerConnections[answer.sender];\r\n    peerConnection.setRemoteDescription(new RTCSessionDescription(answer));\r\n  }, [peerConnections]);\r\n\r\n  const handleNewICECandidateMsg = useCallback((msg) => {\r\n    const candidate = new RTCIceCandidate(msg.candidate);\r\n    const peerConnection = peerConnections[msg.sender];\r\n    peerConnection.addIceCandidate(candidate);\r\n  }, [peerConnections]);\r\n\r\n  // WebSocket setup and cleanup\r\n  useEffect(() => {\r\n    socket.current = new WebSocket(`ws://localhost:8080/ws/session/${sessionId}/`);\r\n\r\n    socket.current.onopen = () => {\r\n      console.log('WebSocket connection established');\r\n      socket.current.send(JSON.stringify({ type: 'join', sessionId }));\r\n    };\r\n\r\n    socket.current.onmessage = (event) => {\r\n      const data = JSON.parse(event.data);\r\n      if (data.type === 'offer') {\r\n        handleOffer(data);\r\n      } else if (data.type === 'answer') {\r\n        handleAnswer(data);\r\n      } else if (data.type === 'ice-candidate') {\r\n        handleNewICECandidateMsg(data);\r\n      }\r\n    };\r\n\r\n    socket.current.onclose = () => {\r\n      console.log('WebSocket connection closed');\r\n    };\r\n\r\n    // Cleanup\r\n    return () => {\r\n      socket.current.close();\r\n    };\r\n  }, [sessionId, handleOffer, handleAnswer, handleNewICECandidateMsg]);\r\n\r\n  return <audio ref={audioRef} autoPlay />;\r\n};\r\n\r\nexport default AudioChat;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,EAAEC,WAAW,EAAEC,OAAO,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvE,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAMC,QAAQ,GAAGT,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAMU,MAAM,GAAGV,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;EAC7B,MAAMW,eAAe,GAAGR,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;EACjD,MAAMS,MAAM,GAAGT,OAAO,CAAC,OAAO;IAC5BU,UAAU,EAAE,CAAC;MAAEC,IAAI,EAAE;IAA+B,CAAC;EACvD,CAAC,CAAC,EAAE,EAAE,CAAC;;EAEP;EACA,MAAMC,WAAW,GAAGb,WAAW,CAAEc,KAAK,IAAK;IACzC,MAAMC,cAAc,GAAG,IAAIC,iBAAiB,CAACN,MAAM,CAAC;IACpDD,eAAe,CAACK,KAAK,CAACG,MAAM,CAAC,GAAGF,cAAc;IAE9CA,cAAc,CAACG,oBAAoB,CAAC,IAAIC,qBAAqB,CAACL,KAAK,CAAC,CAAC;IACrEM,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;MAAEC,KAAK,EAAE;IAAK,CAAC,CAAC,CACjDC,IAAI,CAACC,MAAM,IAAI;MACdA,MAAM,CAACC,SAAS,CAAC,CAAC,CAACC,OAAO,CAACC,KAAK,IAAIb,cAAc,CAACc,QAAQ,CAACD,KAAK,EAAEH,MAAM,CAAC,CAAC;IAC7E,CAAC,CAAC;IACJV,cAAc,CAACe,YAAY,CAAC,CAAC,CAC1BN,IAAI,CAACO,MAAM,IAAI;MACdhB,cAAc,CAACiB,mBAAmB,CAACD,MAAM,CAAC;MAC1CvB,MAAM,CAACyB,OAAO,CAACC,IAAI,CAACC,IAAI,CAACC,SAAS,CAAC;QACjCC,IAAI,EAAE,QAAQ;QACdC,GAAG,EAAEP,MAAM;QACXd,MAAM,EAAE;MACV,CAAC,CAAC,CAAC;IACL,CAAC,CAAC;IACJF,cAAc,CAACwB,OAAO,GAAIC,KAAK,IAAK;MAClCjC,QAAQ,CAAC0B,OAAO,CAACQ,SAAS,GAAGD,KAAK,CAACE,OAAO,CAAC,CAAC,CAAC;IAC/C,CAAC;IACD3B,cAAc,CAAC4B,cAAc,GAAIH,KAAK,IAAK;MACzC,IAAIA,KAAK,CAACI,SAAS,EAAE;QACnBpC,MAAM,CAACyB,OAAO,CAACC,IAAI,CAACC,IAAI,CAACC,SAAS,CAAC;UACjCC,IAAI,EAAE,eAAe;UACrBO,SAAS,EAAEJ,KAAK,CAACI,SAAS;UAC1B3B,MAAM,EAAE;QACV,CAAC,CAAC,CAAC;MACL;IACF,CAAC;EACH,CAAC,EAAE,CAACP,MAAM,EAAED,eAAe,CAAC,CAAC;EAE7B,MAAMoC,YAAY,GAAG7C,WAAW,CAAE+B,MAAM,IAAK;IAC3C,MAAMhB,cAAc,GAAGN,eAAe,CAACsB,MAAM,CAACd,MAAM,CAAC;IACrDF,cAAc,CAACG,oBAAoB,CAAC,IAAIC,qBAAqB,CAACY,MAAM,CAAC,CAAC;EACxE,CAAC,EAAE,CAACtB,eAAe,CAAC,CAAC;EAErB,MAAMqC,wBAAwB,GAAG9C,WAAW,CAAE+C,GAAG,IAAK;IACpD,MAAMH,SAAS,GAAG,IAAII,eAAe,CAACD,GAAG,CAACH,SAAS,CAAC;IACpD,MAAM7B,cAAc,GAAGN,eAAe,CAACsC,GAAG,CAAC9B,MAAM,CAAC;IAClDF,cAAc,CAACkC,eAAe,CAACL,SAAS,CAAC;EAC3C,CAAC,EAAE,CAACnC,eAAe,CAAC,CAAC;;EAErB;EACAV,SAAS,CAAC,MAAM;IACdS,MAAM,CAACyB,OAAO,GAAG,IAAIiB,SAAS,CAAC,kCAAkC7C,SAAS,GAAG,CAAC;IAE9EG,MAAM,CAACyB,OAAO,CAACkB,MAAM,GAAG,MAAM;MAC5BC,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;MAC/C7C,MAAM,CAACyB,OAAO,CAACC,IAAI,CAACC,IAAI,CAACC,SAAS,CAAC;QAAEC,IAAI,EAAE,MAAM;QAAEhC;MAAU,CAAC,CAAC,CAAC;IAClE,CAAC;IAEDG,MAAM,CAACyB,OAAO,CAACqB,SAAS,GAAId,KAAK,IAAK;MACpC,MAAMe,IAAI,GAAGpB,IAAI,CAACqB,KAAK,CAAChB,KAAK,CAACe,IAAI,CAAC;MACnC,IAAIA,IAAI,CAAClB,IAAI,KAAK,OAAO,EAAE;QACzBxB,WAAW,CAAC0C,IAAI,CAAC;MACnB,CAAC,MAAM,IAAIA,IAAI,CAAClB,IAAI,KAAK,QAAQ,EAAE;QACjCQ,YAAY,CAACU,IAAI,CAAC;MACpB,CAAC,MAAM,IAAIA,IAAI,CAAClB,IAAI,KAAK,eAAe,EAAE;QACxCS,wBAAwB,CAACS,IAAI,CAAC;MAChC;IACF,CAAC;IAED/C,MAAM,CAACyB,OAAO,CAACwB,OAAO,GAAG,MAAM;MAC7BL,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;IAC5C,CAAC;;IAED;IACA,OAAO,MAAM;MACX7C,MAAM,CAACyB,OAAO,CAACyB,KAAK,CAAC,CAAC;IACxB,CAAC;EACH,CAAC,EAAE,CAACrD,SAAS,EAAEQ,WAAW,EAAEgC,YAAY,EAAEC,wBAAwB,CAAC,CAAC;EAEpE,oBAAO3C,OAAA;IAAOwD,GAAG,EAAEpD,QAAS;IAACqD,QAAQ;EAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC1C,CAAC;AAAC1D,EAAA,CAnFIF,SAAS;AAAA6D,EAAA,GAAT7D,SAAS;AAqFf,eAAeA,SAAS;AAAC,IAAA6D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}