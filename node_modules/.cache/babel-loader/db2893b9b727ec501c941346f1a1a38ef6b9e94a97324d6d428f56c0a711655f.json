{"ast":null,"code":"import React,{useState,useEffect}from'react';import DocumentCanvas from'./DocumentCanvas';import AudioChat from'./AudioChat';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SessionPage=_ref=>{let{documentUrl,sessionId}=_ref;const[uploadedDocument,setUploadedDocument]=useState(null);const[dynamicSessionId,setDynamicSessionId]=useState(sessionId);// Fetch a valid session ID if it's undefined\nuseEffect(()=>{if(!sessionId){console.warn('Session ID is undefined. Attempting to fetch...');fetch('/api/get-session-id/').then(response=>response.json()).then(data=>{console.log('Fetched Session ID:',data.sessionId);setDynamicSessionId(data.sessionId);}).catch(error=>{console.error('Error fetching Session ID:',error);});}},[sessionId]);// Handle file uploads\nconst handleDocumentUpload=event=>{const file=event.target.files[0];if(file){// Validate file type\nif(!file.type.startsWith('application/pdf')){console.warn('Invalid file type. Please upload a PDF document.');return;}const reader=new FileReader();reader.onload=e=>{setUploadedDocument(e.target.result);console.log('Document uploaded:',e.target.result);};reader.readAsDataURL(file);}else{console.warn('No file selected for upload.');}};// Debug sessionId and documentUrl during rendering\nuseEffect(()=>{console.log('SessionPage rendered with sessionId:',dynamicSessionId);console.log('Document URL:',documentUrl);},[dynamicSessionId,documentUrl]);// Conditional rendering for sessionId\nif(!dynamicSessionId){return/*#__PURE__*/_jsx(\"p\",{style:{color:'red'},children:\"Error: Session ID is undefined. Unable to proceed.\"});}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Session Page\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",onChange:handleDocumentUpload}),/*#__PURE__*/_jsx(DocumentCanvas,{documentUrl:uploadedDocument||documentUrl,sessionId:dynamicSessionId}),/*#__PURE__*/_jsx(AudioChat,{sessionId:dynamicSessionId})]});};export default SessionPage;","map":{"version":3,"names":["React","useState","useEffect","DocumentCanvas","AudioChat","jsx","_jsx","jsxs","_jsxs","SessionPage","_ref","documentUrl","sessionId","uploadedDocument","setUploadedDocument","dynamicSessionId","setDynamicSessionId","console","warn","fetch","then","response","json","data","log","catch","error","handleDocumentUpload","event","file","target","files","type","startsWith","reader","FileReader","onload","e","result","readAsDataURL","style","color","children","onChange"],"sources":["C:/Users/wesle/OneDrive/Documents/VLCS/myProject/VirtualLCS/frontend/src/FetchSessionData.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport DocumentCanvas from './DocumentCanvas';\r\nimport AudioChat from './AudioChat';\r\n\r\nconst SessionPage = ({ documentUrl, sessionId }) => {\r\n  const [uploadedDocument, setUploadedDocument] = useState(null);\r\n  const [dynamicSessionId, setDynamicSessionId] = useState(sessionId);\r\n\r\n  // Fetch a valid session ID if it's undefined\r\n  useEffect(() => {\r\n    if (!sessionId) {\r\n      console.warn('Session ID is undefined. Attempting to fetch...');\r\n      fetch('/api/get-session-id/')\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          console.log('Fetched Session ID:', data.sessionId);\r\n          setDynamicSessionId(data.sessionId);\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error fetching Session ID:', error);\r\n        });\r\n    }\r\n  }, [sessionId]);\r\n\r\n  // Handle file uploads\r\n  const handleDocumentUpload = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      // Validate file type\r\n      if (!file.type.startsWith('application/pdf')) {\r\n        console.warn('Invalid file type. Please upload a PDF document.');\r\n        return;\r\n      }\r\n\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        setUploadedDocument(e.target.result);\r\n        console.log('Document uploaded:', e.target.result);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    } else {\r\n      console.warn('No file selected for upload.');\r\n    }\r\n  };\r\n\r\n  // Debug sessionId and documentUrl during rendering\r\n  useEffect(() => {\r\n    console.log('SessionPage rendered with sessionId:', dynamicSessionId);\r\n    console.log('Document URL:', documentUrl);\r\n  }, [dynamicSessionId, documentUrl]);\r\n\r\n  // Conditional rendering for sessionId\r\n  if (!dynamicSessionId) {\r\n    return <p style={{ color: 'red' }}>Error: Session ID is undefined. Unable to proceed.</p>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Session Page</h1>\r\n      <input type=\"file\" onChange={handleDocumentUpload} />\r\n      <DocumentCanvas documentUrl={uploadedDocument || documentUrl} sessionId={dynamicSessionId} />\r\n      <AudioChat sessionId={dynamicSessionId} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SessionPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}