{"ast":null,"code":"import React,{useRef,useEffect,useCallback,useState,useMemo}from'react';import{useSession}from'./SessionContext';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AudioChat=()=>{const{sessionId}=useSession();const audioRef=useRef(null);const socket=useRef(null);const peerConnections=useRef({});const[isMuted,setIsMuted]=useState(false);const reconnectInterval=5000;const maxReconnectAttempts=5;const reconnectAttemptsRef=useRef(0);const config=useMemo(()=>({iceServers:[{urls:'stun:stun.l.google.com:19302'}]}),[]);const handleOffer=useCallback(offer=>{console.log('Received offer:',offer);// Debugging tip\nconst peerConnection=new RTCPeerConnection(config);peerConnections.current[offer.sender]=peerConnection;peerConnection.setRemoteDescription(new RTCSessionDescription(offer));navigator.mediaDevices.getUserMedia({audio:true}).then(stream=>{console.log('User media stream:',stream);// Debugging tip\nstream.getTracks().forEach(track=>peerConnection.addTrack(track,stream));}).catch(error=>console.error('Error accessing user media:',error.message));peerConnection.createAnswer().then(answer=>{console.log('Created answer:',answer);// Debugging tip\npeerConnection.setLocalDescription(answer);socket.current.send(JSON.stringify({type:'answer',sdp:answer,sender:'client'}));});peerConnection.ontrack=event=>{console.log('Remote stream:',event.streams[0]);// Debugging tip\naudioRef.current.srcObject=event.streams[0];};peerConnection.onicecandidate=event=>{console.log('ICE candidate:',event.candidate);// Debugging tip\nif(event.candidate){socket.current.send(JSON.stringify({type:'ice-candidate',candidate:event.candidate,sender:'client'}));}};},[config]);const handleAnswer=useCallback(answer=>{console.log('Received answer:',answer);// Debugging tip\nconst peerConnection=peerConnections.current[answer.sender];if(peerConnection){peerConnection.setRemoteDescription(new RTCSessionDescription(answer));}},[]);const handleNewICECandidateMsg=useCallback(msg=>{console.log('Received ICE candidate message:',msg);// Debugging tip\nconst candidate=new RTCIceCandidate(msg.candidate);const peerConnection=peerConnections.current[msg.sender];if(peerConnection){peerConnection.addIceCandidate(candidate);}},[]);const connectWebSocket=useCallback(()=>{if(!sessionId){console.error('Session ID is undefined. Unable to initialize WebSocket.');return;}socket.current=new WebSocket(`ws://127.0.0.1:8080/ws/session/${sessionId}/`);socket.current.onopen=()=>{console.log('WebSocket connection established');// Debugging tip\nreconnectAttemptsRef.current=0;socket.current.send(JSON.stringify({type:'join',sessionId}));};socket.current.onmessage=event=>{const data=JSON.parse(event.data);console.log('WebSocket message received:',data);// Debugging tip\nif(data.type==='offer')handleOffer(data);if(data.type==='answer')handleAnswer(data);if(data.type==='ice-candidate')handleNewICECandidateMsg(data);};socket.current.onclose=()=>{console.warn('WebSocket disconnected.');if(reconnectAttemptsRef.current<maxReconnectAttempts){reconnectAttemptsRef.current+=1;console.warn(`Attempting to reconnect (${reconnectAttemptsRef.current}/${maxReconnectAttempts})...`);setTimeout(connectWebSocket,reconnectInterval);}else{console.error('Max reconnect attempts reached. Unable to reconnect WebSocket.');}};socket.current.onerror=error=>{console.error('WebSocket error:',error.message);};},[sessionId,handleOffer,handleAnswer,handleNewICECandidateMsg]);useEffect(()=>{connectWebSocket();const currentPeerConnections=peerConnections.current;return()=>{var _socket$current;(_socket$current=socket.current)===null||_socket$current===void 0?void 0:_socket$current.close();Object.values(currentPeerConnections).forEach(peerConnection=>peerConnection.close());};},[connectWebSocket]);const toggleMute=()=>{var _audioRef$current$src;const audioTracks=(_audioRef$current$src=audioRef.current.srcObject)===null||_audioRef$current$src===void 0?void 0:_audioRef$current$src.getAudioTracks();console.log('Audio tracks before toggle:',audioTracks);// Debugging tip\nif(audioTracks){audioTracks.forEach(track=>track.enabled=!isMuted);setIsMuted(!isMuted);}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"audio\",{ref:audioRef,autoPlay:true}),/*#__PURE__*/_jsx(\"button\",{onClick:toggleMute,children:isMuted?'Unmute':'Mute'})]});};export default AudioChat;","map":{"version":3,"names":["React","useRef","useEffect","useCallback","useState","useMemo","useSession","jsx","_jsx","jsxs","_jsxs","AudioChat","sessionId","audioRef","socket","peerConnections","isMuted","setIsMuted","reconnectInterval","maxReconnectAttempts","reconnectAttemptsRef","config","iceServers","urls","handleOffer","offer","console","log","peerConnection","RTCPeerConnection","current","sender","setRemoteDescription","RTCSessionDescription","navigator","mediaDevices","getUserMedia","audio","then","stream","getTracks","forEach","track","addTrack","catch","error","message","createAnswer","answer","setLocalDescription","send","JSON","stringify","type","sdp","ontrack","event","streams","srcObject","onicecandidate","candidate","handleAnswer","handleNewICECandidateMsg","msg","RTCIceCandidate","addIceCandidate","connectWebSocket","WebSocket","onopen","onmessage","data","parse","onclose","warn","setTimeout","onerror","currentPeerConnections","_socket$current","close","Object","values","toggleMute","_audioRef$current$src","audioTracks","getAudioTracks","enabled","children","ref","autoPlay","onClick"],"sources":["C:/Users/wesle/OneDrive/Documents/VLCS/myProject/VirtualLCS/frontend/src/AudioChat.jsx"],"sourcesContent":["import React, { useRef, useEffect, useCallback, useState, useMemo } from 'react';\r\nimport { useSession } from './SessionContext';\r\n\r\nconst AudioChat = () => {\r\n  const { sessionId } = useSession();\r\n  const audioRef = useRef(null);\r\n  const socket = useRef(null);\r\n  const peerConnections = useRef({});\r\n  const [isMuted, setIsMuted] = useState(false);\r\n  const reconnectInterval = 5000;\r\n  const maxReconnectAttempts = 5;\r\n  const reconnectAttemptsRef = useRef(0);\r\n\r\n  const config = useMemo(() => ({\r\n    iceServers: [{ urls: 'stun:stun.l.google.com:19302' }],\r\n  }), []);\r\n\r\n  const handleOffer = useCallback((offer) => {\r\n    console.log('Received offer:', offer); // Debugging tip\r\n    const peerConnection = new RTCPeerConnection(config);\r\n    peerConnections.current[offer.sender] = peerConnection;\r\n\r\n    peerConnection.setRemoteDescription(new RTCSessionDescription(offer));\r\n    navigator.mediaDevices.getUserMedia({ audio: true })\r\n      .then((stream) => {\r\n        console.log('User media stream:', stream); // Debugging tip\r\n        stream.getTracks().forEach((track) => peerConnection.addTrack(track, stream));\r\n      })\r\n      .catch((error) => console.error('Error accessing user media:', error.message));\r\n\r\n    peerConnection.createAnswer()\r\n      .then((answer) => {\r\n        console.log('Created answer:', answer); // Debugging tip\r\n        peerConnection.setLocalDescription(answer);\r\n        socket.current.send(\r\n          JSON.stringify({\r\n            type: 'answer',\r\n            sdp: answer,\r\n            sender: 'client',\r\n          })\r\n        );\r\n      });\r\n\r\n    peerConnection.ontrack = (event) => {\r\n      console.log('Remote stream:', event.streams[0]); // Debugging tip\r\n      audioRef.current.srcObject = event.streams[0];\r\n    };\r\n\r\n    peerConnection.onicecandidate = (event) => {\r\n      console.log('ICE candidate:', event.candidate); // Debugging tip\r\n      if (event.candidate) {\r\n        socket.current.send(\r\n          JSON.stringify({\r\n            type: 'ice-candidate',\r\n            candidate: event.candidate,\r\n            sender: 'client',\r\n          })\r\n        );\r\n      }\r\n    };\r\n  }, [config]);\r\n\r\n  const handleAnswer = useCallback((answer) => {\r\n    console.log('Received answer:', answer); // Debugging tip\r\n    const peerConnection = peerConnections.current[answer.sender];\r\n    if (peerConnection) {\r\n      peerConnection.setRemoteDescription(new RTCSessionDescription(answer));\r\n    }\r\n  }, []);\r\n\r\n  const handleNewICECandidateMsg = useCallback((msg) => {\r\n    console.log('Received ICE candidate message:', msg); // Debugging tip\r\n    const candidate = new RTCIceCandidate(msg.candidate);\r\n    const peerConnection = peerConnections.current[msg.sender];\r\n    if (peerConnection) {\r\n      peerConnection.addIceCandidate(candidate);\r\n    }\r\n  }, []);\r\n\r\n  const connectWebSocket = useCallback(() => {\r\n    if (!sessionId) {\r\n      console.error('Session ID is undefined. Unable to initialize WebSocket.');\r\n      return;\r\n    }\r\n\r\n    socket.current = new WebSocket(`ws://127.0.0.1:8080/ws/session/${sessionId}/`);\r\n\r\n    socket.current.onopen = () => {\r\n      console.log('WebSocket connection established'); // Debugging tip\r\n      reconnectAttemptsRef.current = 0;\r\n      socket.current.send(JSON.stringify({ type: 'join', sessionId }));\r\n    };\r\n\r\n    socket.current.onmessage = (event) => {\r\n      const data = JSON.parse(event.data);\r\n      console.log('WebSocket message received:', data); // Debugging tip\r\n      if (data.type === 'offer') handleOffer(data);\r\n      if (data.type === 'answer') handleAnswer(data);\r\n      if (data.type === 'ice-candidate') handleNewICECandidateMsg(data);\r\n    };\r\n\r\n    socket.current.onclose = () => {\r\n      console.warn('WebSocket disconnected.');\r\n      if (reconnectAttemptsRef.current < maxReconnectAttempts) {\r\n        reconnectAttemptsRef.current += 1;\r\n        console.warn(`Attempting to reconnect (${reconnectAttemptsRef.current}/${maxReconnectAttempts})...`);\r\n        setTimeout(connectWebSocket, reconnectInterval);\r\n      } else {\r\n        console.error('Max reconnect attempts reached. Unable to reconnect WebSocket.');\r\n      }\r\n    };\r\n\r\n    socket.current.onerror = (error) => {\r\n      console.error('WebSocket error:', error.message);\r\n    };\r\n  }, [sessionId, handleOffer, handleAnswer, handleNewICECandidateMsg]);\r\n\r\n  useEffect(() => {\r\n    connectWebSocket();\r\n\r\n    const currentPeerConnections = peerConnections.current;\r\n\r\n    return () => {\r\n      socket.current?.close();\r\n      Object.values(currentPeerConnections).forEach((peerConnection) =>\r\n        peerConnection.close()\r\n      );\r\n    };\r\n  }, [connectWebSocket]);\r\n\r\n  const toggleMute = () => {\r\n    const audioTracks = audioRef.current.srcObject?.getAudioTracks();\r\n    console.log('Audio tracks before toggle:', audioTracks); // Debugging tip\r\n    if (audioTracks) {\r\n      audioTracks.forEach((track) => (track.enabled = !isMuted));\r\n      setIsMuted(!isMuted);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <audio ref={audioRef} autoPlay />\r\n      <button onClick={toggleMute}>{isMuted ? 'Unmute' : 'Mute'}</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AudioChat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}