{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wesle\\\\OneDrive\\\\Documents\\\\VLCS\\\\myProject\\\\VirtualLCS\\\\frontend\\\\src\\\\DocumentCanvas.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport { Canvas, util } from 'fabric';\nimport pdfjsLib from 'pdfjs-dist/webpack';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DocumentCanvas = ({\n  documentUrl\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const [canvas, setCanvas] = useState(null);\n  useEffect(() => {\n    console.log('Initializing canvas...');\n    const canvasInstance = new Canvas(canvasRef.current);\n    setCanvas(canvasInstance);\n\n    // Check if documentUrl is a PDF\n    if (documentUrl && documentUrl.endsWith('.pdf')) {\n      const loadingTask = pdfjsLib.getDocument(documentUrl);\n      loadingTask.promise.then(pdf => {\n        console.log(`Loaded PDF: ${pdf.numPages} pages`);\n\n        // Render the first page as an image\n        pdf.getPage(1).then(page => {\n          const viewport = page.getViewport({\n            scale: 1.5\n          });\n          const canvasElement = document.createElement('canvas');\n          const context = canvasElement.getContext('2d');\n          canvasElement.width = viewport.width;\n          canvasElement.height = viewport.height;\n          const renderTask = page.render({\n            canvasContext: context,\n            viewport: viewport\n          });\n          renderTask.promise.then(() => {\n            const imgUrl = canvasElement.toDataURL();\n            fabric.Image.fromURL(imgUrl, img => {\n              canvasInstance.setBackgroundImage(img, canvasInstance.renderAll.bind(canvasInstance));\n              console.log('PDF rendered as image and set as background.');\n            });\n          });\n        });\n      }).catch(error => {\n        console.error('Error loading PDF:', error.message);\n      });\n    } else {\n      console.warn('Unsupported document format or missing URL.');\n    }\n    const socket = io('http://localhost:3000');\n    socket.on('connect', () => {\n      console.log('Connected to WebSocket server.');\n    });\n    socket.on('draw', data => {\n      console.log('Received draw data:', data);\n      util.enlivenObjects([data], objects => {\n        objects.forEach(obj => canvasInstance.add(obj));\n      });\n    });\n    canvasInstance.on('object:added', e => {\n      const object = e.target;\n      socket.emit('draw', object.toJSON());\n      console.log('Object added:', object);\n    });\n    return () => {\n      canvasInstance.dispose();\n      socket.disconnect();\n    };\n  }, [documentUrl]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    width: 800,\n    height: 600\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 10\n  }, this);\n};\n_s(DocumentCanvas, \"O0M3y07DOrZjgMFb7j1sGn9s6P8=\");\n_c = DocumentCanvas;\nexport default DocumentCanvas;\nvar _c;\n$RefreshReg$(_c, \"DocumentCanvas\");","map":{"version":3,"names":["React","useState","useRef","useEffect","io","Canvas","util","pdfjsLib","jsxDEV","_jsxDEV","DocumentCanvas","documentUrl","_s","canvasRef","canvas","setCanvas","console","log","canvasInstance","current","endsWith","loadingTask","getDocument","promise","then","pdf","numPages","getPage","page","viewport","getViewport","scale","canvasElement","document","createElement","context","getContext","width","height","renderTask","render","canvasContext","imgUrl","toDataURL","fabric","Image","fromURL","img","setBackgroundImage","renderAll","bind","catch","error","message","warn","socket","on","data","enlivenObjects","objects","forEach","obj","add","e","object","target","emit","toJSON","dispose","disconnect","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/wesle/OneDrive/Documents/VLCS/myProject/VirtualLCS/frontend/src/DocumentCanvas.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\nimport { Canvas, util } from 'fabric';\r\nimport pdfjsLib from 'pdfjs-dist/webpack';\r\n\r\nconst DocumentCanvas = ({ documentUrl }) => {\r\n  const canvasRef = useRef(null);\r\n  const [canvas, setCanvas] = useState(null);\r\n\r\n  useEffect(() => {\r\n    console.log('Initializing canvas...');\r\n    const canvasInstance = new Canvas(canvasRef.current);\r\n    setCanvas(canvasInstance);\r\n\r\n    // Check if documentUrl is a PDF\r\n    if (documentUrl && documentUrl.endsWith('.pdf')) {\r\n      const loadingTask = pdfjsLib.getDocument(documentUrl);\r\n      loadingTask.promise\r\n        .then((pdf) => {\r\n          console.log(`Loaded PDF: ${pdf.numPages} pages`);\r\n\r\n          // Render the first page as an image\r\n          pdf.getPage(1).then((page) => {\r\n            const viewport = page.getViewport({ scale: 1.5 });\r\n            const canvasElement = document.createElement('canvas');\r\n            const context = canvasElement.getContext('2d');\r\n            canvasElement.width = viewport.width;\r\n            canvasElement.height = viewport.height;\r\n\r\n            const renderTask = page.render({\r\n              canvasContext: context,\r\n              viewport: viewport,\r\n            });\r\n\r\n            renderTask.promise.then(() => {\r\n              const imgUrl = canvasElement.toDataURL();\r\n              fabric.Image.fromURL(imgUrl, (img) => {\r\n                canvasInstance.setBackgroundImage(\r\n                  img,\r\n                  canvasInstance.renderAll.bind(canvasInstance)\r\n                );\r\n                console.log('PDF rendered as image and set as background.');\r\n              });\r\n            });\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error loading PDF:', error.message);\r\n        });\r\n    } else {\r\n      console.warn('Unsupported document format or missing URL.');\r\n    }\r\n\r\n    const socket = io('http://localhost:3000');\r\n    socket.on('connect', () => {\r\n      console.log('Connected to WebSocket server.');\r\n    });\r\n\r\n    socket.on('draw', (data) => {\r\n      console.log('Received draw data:', data);\r\n      util.enlivenObjects([data], (objects) => {\r\n        objects.forEach((obj) => canvasInstance.add(obj));\r\n      });\r\n    });\r\n\r\n    canvasInstance.on('object:added', (e) => {\r\n      const object = e.target;\r\n      socket.emit('draw', object.toJSON());\r\n      console.log('Object added:', object);\r\n    });\r\n\r\n    return () => {\r\n      canvasInstance.dispose();\r\n      socket.disconnect();\r\n    };\r\n  }, [documentUrl]);\r\n\r\n  return <canvas ref={canvasRef} width={800} height={600} />;\r\n};\r\n\r\nexport default DocumentCanvas;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}