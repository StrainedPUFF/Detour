{"ast":null,"code":"import React,{useState,useRef,useEffect}from'react';import{Canvas,Image,util}from'fabric';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const DocumentCanvas=_ref=>{let{documentUrl,sessionId}=_ref;const canvasRef=useRef(null);const[canvas,setCanvas]=useState(null);const socket=useRef(null);// WebSocket connection stored here\nconst reconnectInterval=5000;// Reconnection interval (in milliseconds)\nuseEffect(()=>{console.log('Initializing canvas...');// Create a Fabric.js canvas instance\nconst canvasInstance=new Canvas(canvasRef.current);setCanvas(canvasInstance);// Load the background image\nif(documentUrl){Image.fromURL(documentUrl,img=>{canvasInstance.setBackgroundImage(img,canvasInstance.renderAll.bind(canvasInstance),{crossOrigin:'anonymous'// Prevent cross-origin issues\n});console.log('Document URL:',documentUrl);},{crossOrigin:'anonymous'});}else{console.warn('No document URL provided.');}// Function to establish a WebSocket connection\nconst connectWebSocket=()=>{if(!sessionId){console.error('Session ID is undefined. Unable to initialize WebSocket.');return;}socket.current=new WebSocket(`ws://localhost:8080/ws/session/${sessionId}/`);socket.current.onopen=()=>{console.log('WebSocket connection established.');};socket.current.onmessage=event=>{const data=JSON.parse(event.data);if(data.type==='draw'){console.log('Received draw data:',data.payload);util.enlivenObjects([data.payload],objects=>{objects.forEach(obj=>{if(canvasInstance){canvasInstance.add(obj);}});});}};socket.current.onclose=()=>{console.warn('WebSocket disconnected. Attempting to reconnect...');setTimeout(connectWebSocket,reconnectInterval);};socket.current.onerror=error=>{console.error('WebSocket error:',error.message);};};// Initialize WebSocket connection\nconnectWebSocket();// Emit data when an object is added to the canvas\nconst emitObjectData=object=>{try{if(socket.current){socket.current.send(JSON.stringify({type:'draw',payload:object.toJSON()}));console.log('Object emitted:',object);}}catch(error){console.error('Error emitting object data:',error.message);}};canvasInstance.on('object:added',e=>{const object=e.target;emitObjectData(object);});// Cleanup on component unmount\nreturn()=>{canvasInstance.dispose();if(socket.current){socket.current.close();}};},[documentUrl,sessionId]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"canvas\",{ref:canvasRef,width:800,height:600}),!documentUrl&&/*#__PURE__*/_jsx(\"p\",{style:{color:'red'},children:\"No document available to load.\"})]});};export default DocumentCanvas;","map":{"version":3,"names":["React","useState","useRef","useEffect","Canvas","Image","util","jsx","_jsx","jsxs","_jsxs","DocumentCanvas","_ref","documentUrl","sessionId","canvasRef","canvas","setCanvas","socket","reconnectInterval","console","log","canvasInstance","current","fromURL","img","setBackgroundImage","renderAll","bind","crossOrigin","warn","connectWebSocket","error","WebSocket","onopen","onmessage","event","data","JSON","parse","type","payload","enlivenObjects","objects","forEach","obj","add","onclose","setTimeout","onerror","message","emitObjectData","object","send","stringify","toJSON","on","e","target","dispose","close","children","ref","width","height","style","color"],"sources":["C:/Users/wesle/OneDrive/Documents/VLCS/myProject/VirtualLCS/frontend/src/DocumentCanvas.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { Canvas, Image, util } from 'fabric';\r\n\r\nconst DocumentCanvas = ({ documentUrl, sessionId }) => {\r\n  const canvasRef = useRef(null);\r\n  const [canvas, setCanvas] = useState(null);\r\n  const socket = useRef(null); // WebSocket connection stored here\r\n  const reconnectInterval = 5000; // Reconnection interval (in milliseconds)\r\n\r\n  useEffect(() => {\r\n    console.log('Initializing canvas...');\r\n    // Create a Fabric.js canvas instance\r\n    const canvasInstance = new Canvas(canvasRef.current);\r\n    setCanvas(canvasInstance);\r\n\r\n    // Load the background image\r\n    if (documentUrl) {\r\n      Image.fromURL(\r\n        documentUrl,\r\n        (img) => {\r\n          canvasInstance.setBackgroundImage(\r\n            img,\r\n            canvasInstance.renderAll.bind(canvasInstance),\r\n            {\r\n              crossOrigin: 'anonymous', // Prevent cross-origin issues\r\n            }\r\n          );\r\n          console.log('Document URL:', documentUrl);\r\n        },\r\n        { crossOrigin: 'anonymous' }\r\n      );\r\n    } else {\r\n      console.warn('No document URL provided.');\r\n    }\r\n\r\n    // Function to establish a WebSocket connection\r\n    const connectWebSocket = () => {\r\n      if (!sessionId) {\r\n        console.error('Session ID is undefined. Unable to initialize WebSocket.');\r\n        return;\r\n      }\r\n\r\n      socket.current = new WebSocket(`ws://localhost:8080/ws/session/${sessionId}/`);\r\n\r\n      socket.current.onopen = () => {\r\n        console.log('WebSocket connection established.');\r\n      };\r\n\r\n      socket.current.onmessage = (event) => {\r\n        const data = JSON.parse(event.data);\r\n        if (data.type === 'draw') {\r\n          console.log('Received draw data:', data.payload);\r\n          util.enlivenObjects([data.payload], (objects) => {\r\n            objects.forEach((obj) => {\r\n              if (canvasInstance) {\r\n                canvasInstance.add(obj);\r\n              }\r\n            });\r\n          });\r\n        }\r\n      };\r\n\r\n      socket.current.onclose = () => {\r\n        console.warn('WebSocket disconnected. Attempting to reconnect...');\r\n        setTimeout(connectWebSocket, reconnectInterval);\r\n      };\r\n\r\n      socket.current.onerror = (error) => {\r\n        console.error('WebSocket error:', error.message);\r\n      };\r\n    };\r\n\r\n    // Initialize WebSocket connection\r\n    connectWebSocket();\r\n\r\n    // Emit data when an object is added to the canvas\r\n    const emitObjectData = (object) => {\r\n      try {\r\n        if (socket.current) {\r\n          socket.current.send(\r\n            JSON.stringify({\r\n              type: 'draw',\r\n              payload: object.toJSON(),\r\n            })\r\n          );\r\n          console.log('Object emitted:', object);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error emitting object data:', error.message);\r\n      }\r\n    };\r\n\r\n    canvasInstance.on('object:added', (e) => {\r\n      const object = e.target;\r\n      emitObjectData(object);\r\n    });\r\n\r\n    // Cleanup on component unmount\r\n    return () => {\r\n      canvasInstance.dispose();\r\n      if (socket.current) {\r\n        socket.current.close();\r\n      }\r\n    };\r\n  }, [documentUrl, sessionId]);\r\n\r\n  return (\r\n    <div>\r\n      <canvas ref={canvasRef} width={800} height={600} />\r\n      {!documentUrl && <p style={{ color: 'red' }}>No document available to load.</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DocumentCanvas;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}