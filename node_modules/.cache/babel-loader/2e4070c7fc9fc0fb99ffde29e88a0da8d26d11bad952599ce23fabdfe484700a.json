{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wesle\\\\OneDrive\\\\Documents\\\\VLCS\\\\myProject\\\\VirtualLCS\\\\frontend\\\\src\\\\DocumentCanvas.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { Stage, Layer, Image, Line } from \"react-konva\";\nimport * as pdfjs from \"pdfjs-dist\";\nimport { useSession } from \"./SessionContext\"; // Import the session context hook\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\npdfjs.GlobalWorkerOptions.workerSrc = \"static/pdf.worker.mjs\";\nconst DocumentCanvas = () => {\n  _s();\n  // Access session data (sessionId and documentUrl) using useSession\n  const {\n    sessionId,\n    documentUrl\n  } = useSession();\n  const stageRef = useRef();\n  const socket = useRef(null);\n  const [image, setImage] = useState(null);\n  const [lines, setLines] = useState([]);\n  const [isDrawing, setIsDrawing] = useState(false);\n  useEffect(() => {\n    const renderPDF = async () => {\n      if (!documentUrl) {\n        console.warn(\"No document URL provided.\");\n        return;\n      }\n      try {\n        const pdf = await pdfjs.getDocument(documentUrl).promise;\n        const page = await pdf.getPage(1); // Render the first page for simplicity\n        const viewport = page.getViewport({\n          scale: 1.5\n        });\n        const canvas = document.createElement(\"canvas\");\n        const context = canvas.getContext(\"2d\");\n        canvas.width = viewport.width;\n        canvas.height = viewport.height;\n        await page.render({\n          canvasContext: context,\n          viewport\n        }).promise;\n        const img = new window.Image();\n        img.src = canvas.toDataURL();\n        img.onload = () => setImage(img);\n      } catch (error) {\n        console.error(\"Error rendering PDF:\", error);\n      }\n    };\n    renderPDF();\n  }, [documentUrl]);\n  useEffect(() => {\n    if (!sessionId) {\n      console.error(\"Session ID is missing. Unable to connect to WebSocket.\");\n      return;\n    }\n    const webSocketUrl = `ws://127.0.0.1:8080/ws/session/${sessionId}/`;\n    console.log(\"Connecting to WebSocket:\", webSocketUrl);\n    socket.current = new WebSocket(webSocketUrl);\n    socket.current.onopen = () => {\n      console.log(\"WebSocket connection established.\");\n    };\n    socket.current.onmessage = event => {\n      const data = JSON.parse(event.data);\n      if (data.type === \"draw\") {\n        setLines(prevLines => [...prevLines, data.payload]);\n      }\n    };\n    socket.current.onclose = () => {\n      console.warn(\"WebSocket connection closed.\");\n    };\n    socket.current.onerror = error => {\n      console.error(\"WebSocket error:\", error.message);\n    };\n    return () => {\n      if (socket.current) {\n        socket.current.close();\n      }\n    };\n  }, [sessionId]);\n  const handleMouseDown = () => {\n    setIsDrawing(true);\n    setLines([...lines, []]);\n  };\n  const handleMouseMove = e => {\n    if (!isDrawing) return;\n    const stage = stageRef.current;\n    const point = stage.getPointerPosition();\n    const lastLine = lines[lines.length - 1];\n    lastLine.push(point);\n    lines.splice(lines.length - 1, 1, lastLine);\n    setLines([...lines]);\n  };\n  const handleMouseUp = () => {\n    setIsDrawing(false);\n\n    // Emit drawing data via WebSocket\n    if (socket.current && socket.current.readyState === WebSocket.OPEN) {\n      const lastLine = lines[lines.length - 1];\n      socket.current.send(JSON.stringify({\n        type: \"draw\",\n        payload: lastLine\n      }));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Stage, {\n    width: 800,\n    height: 600,\n    ref: stageRef,\n    onMouseDown: handleMouseDown,\n    onMouseMove: handleMouseMove,\n    onMouseUp: handleMouseUp,\n    children: /*#__PURE__*/_jsxDEV(Layer, {\n      children: [image && /*#__PURE__*/_jsxDEV(Image, {\n        image: image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 19\n      }, this), lines.map((line, i) => /*#__PURE__*/_jsxDEV(Line, {\n        points: line.flatMap(point => [point.x, point.y]),\n        stroke: \"black\",\n        strokeWidth: 2,\n        tension: 0.5,\n        lineCap: \"round\",\n        lineJoin: \"round\"\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n_s(DocumentCanvas, \"M8eNEusqrdI6FOIC0w7L0tGAxFc=\", false, function () {\n  return [useSession];\n});\n_c = DocumentCanvas;\nexport default DocumentCanvas;\nvar _c;\n$RefreshReg$(_c, \"DocumentCanvas\");","map":{"version":3,"names":["React","useRef","useEffect","useState","Stage","Layer","Image","Line","pdfjs","useSession","jsxDEV","_jsxDEV","GlobalWorkerOptions","workerSrc","DocumentCanvas","_s","sessionId","documentUrl","stageRef","socket","image","setImage","lines","setLines","isDrawing","setIsDrawing","renderPDF","console","warn","pdf","getDocument","promise","page","getPage","viewport","getViewport","scale","canvas","document","createElement","context","getContext","width","height","render","canvasContext","img","window","src","toDataURL","onload","error","webSocketUrl","log","current","WebSocket","onopen","onmessage","event","data","JSON","parse","type","prevLines","payload","onclose","onerror","message","close","handleMouseDown","handleMouseMove","e","stage","point","getPointerPosition","lastLine","length","push","splice","handleMouseUp","readyState","OPEN","send","stringify","ref","onMouseDown","onMouseMove","onMouseUp","children","fileName","_jsxFileName","lineNumber","columnNumber","map","line","i","points","flatMap","x","y","stroke","strokeWidth","tension","lineCap","lineJoin","_c","$RefreshReg$"],"sources":["C:/Users/wesle/OneDrive/Documents/VLCS/myProject/VirtualLCS/frontend/src/DocumentCanvas.jsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\r\nimport { Stage, Layer, Image, Line } from \"react-konva\";\r\nimport * as pdfjs from \"pdfjs-dist\";\r\nimport { useSession } from \"./SessionContext\"; // Import the session context hook\r\n\r\npdfjs.GlobalWorkerOptions.workerSrc = \"static/pdf.worker.mjs\";\r\n\r\nconst DocumentCanvas = () => {\r\n  // Access session data (sessionId and documentUrl) using useSession\r\n  const { sessionId, documentUrl } = useSession();\r\n  const stageRef = useRef();\r\n  const socket = useRef(null);\r\n  const [image, setImage] = useState(null);\r\n  const [lines, setLines] = useState([]);\r\n  const [isDrawing, setIsDrawing] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const renderPDF = async () => {\r\n      if (!documentUrl) {\r\n        console.warn(\"No document URL provided.\");\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const pdf = await pdfjs.getDocument(documentUrl).promise;\r\n        const page = await pdf.getPage(1); // Render the first page for simplicity\r\n        const viewport = page.getViewport({ scale: 1.5 });\r\n        const canvas = document.createElement(\"canvas\");\r\n        const context = canvas.getContext(\"2d\");\r\n\r\n        canvas.width = viewport.width;\r\n        canvas.height = viewport.height;\r\n\r\n        await page.render({ canvasContext: context, viewport }).promise;\r\n\r\n        const img = new window.Image();\r\n        img.src = canvas.toDataURL();\r\n        img.onload = () => setImage(img);\r\n      } catch (error) {\r\n        console.error(\"Error rendering PDF:\", error);\r\n      }\r\n    };\r\n\r\n    renderPDF();\r\n  }, [documentUrl]);\r\n\r\n  useEffect(() => {\r\n    if (!sessionId) {\r\n      console.error(\"Session ID is missing. Unable to connect to WebSocket.\");\r\n      return;\r\n    }\r\n\r\n    const webSocketUrl = `ws://127.0.0.1:8080/ws/session/${sessionId}/`;\r\n    console.log(\"Connecting to WebSocket:\", webSocketUrl);\r\n\r\n    socket.current = new WebSocket(webSocketUrl);\r\n\r\n    socket.current.onopen = () => {\r\n      console.log(\"WebSocket connection established.\");\r\n    };\r\n\r\n    socket.current.onmessage = (event) => {\r\n      const data = JSON.parse(event.data);\r\n      if (data.type === \"draw\") {\r\n        setLines((prevLines) => [...prevLines, data.payload]);\r\n      }\r\n    };\r\n\r\n    socket.current.onclose = () => {\r\n      console.warn(\"WebSocket connection closed.\");\r\n    };\r\n\r\n    socket.current.onerror = (error) => {\r\n      console.error(\"WebSocket error:\", error.message);\r\n    };\r\n\r\n    return () => {\r\n      if (socket.current) {\r\n        socket.current.close();\r\n      }\r\n    };\r\n  }, [sessionId]);\r\n\r\n  const handleMouseDown = () => {\r\n    setIsDrawing(true);\r\n    setLines([...lines, []]);\r\n  };\r\n\r\n  const handleMouseMove = (e) => {\r\n    if (!isDrawing) return;\r\n\r\n    const stage = stageRef.current;\r\n    const point = stage.getPointerPosition();\r\n    const lastLine = lines[lines.length - 1];\r\n    lastLine.push(point);\r\n    lines.splice(lines.length - 1, 1, lastLine);\r\n    setLines([...lines]);\r\n  };\r\n\r\n  const handleMouseUp = () => {\r\n    setIsDrawing(false);\r\n\r\n    // Emit drawing data via WebSocket\r\n    if (socket.current && socket.current.readyState === WebSocket.OPEN) {\r\n      const lastLine = lines[lines.length - 1];\r\n      socket.current.send(\r\n        JSON.stringify({\r\n          type: \"draw\",\r\n          payload: lastLine,\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Stage\r\n      width={800}\r\n      height={600}\r\n      ref={stageRef}\r\n      onMouseDown={handleMouseDown}\r\n      onMouseMove={handleMouseMove}\r\n      onMouseUp={handleMouseUp}\r\n    >\r\n      <Layer>\r\n        {image && <Image image={image} />}\r\n        {lines.map((line, i) => (\r\n          <Line\r\n            key={i}\r\n            points={line.flatMap((point) => [point.x, point.y])}\r\n            stroke=\"black\"\r\n            strokeWidth={2}\r\n            tension={0.5}\r\n            lineCap=\"round\"\r\n            lineJoin=\"round\"\r\n          />\r\n        ))}\r\n      </Layer>\r\n    </Stage>\r\n  );\r\n};\r\n\r\nexport default DocumentCanvas;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}