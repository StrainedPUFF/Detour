{"ast":null,"code":"import React,{useRef,useEffect,useCallback,useMemo}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const AudioChat=_ref=>{let{sessionId}=_ref;const audioRef=useRef(null);const socket=useRef(null);// Persist WebSocket instance\nconst peerConnections=useMemo(()=>({}),[]);// Memoized peer connections\nconst config=useMemo(()=>({iceServers:[{urls:'stun:stun.l.google.com:19302'}]}),[]);// Memoized event handlers\nconst handleOffer=useCallback(offer=>{const peerConnection=new RTCPeerConnection(config);peerConnections[offer.sender]=peerConnection;peerConnection.setRemoteDescription(new RTCSessionDescription(offer));navigator.mediaDevices.getUserMedia({audio:true}).then(stream=>{stream.getTracks().forEach(track=>peerConnection.addTrack(track,stream));});peerConnection.createAnswer().then(answer=>{peerConnection.setLocalDescription(answer);socket.current.send(JSON.stringify({type:'answer',sdp:answer,sender:'client'}));});peerConnection.ontrack=event=>{audioRef.current.srcObject=event.streams[0];};peerConnection.onicecandidate=event=>{if(event.candidate){socket.current.send(JSON.stringify({type:'ice-candidate',candidate:event.candidate,sender:'client'}));}};},[config,peerConnections]);const handleAnswer=useCallback(answer=>{const peerConnection=peerConnections[answer.sender];peerConnection.setRemoteDescription(new RTCSessionDescription(answer));},[peerConnections]);const handleNewICECandidateMsg=useCallback(msg=>{const candidate=new RTCIceCandidate(msg.candidate);const peerConnection=peerConnections[msg.sender];peerConnection.addIceCandidate(candidate);},[peerConnections]);// WebSocket setup and cleanup\nuseEffect(()=>{socket.current=new WebSocket(`ws://localhost:8080/ws/session/${sessionId}/`);socket.current.onopen=()=>{console.log('WebSocket connection established');socket.current.send(JSON.stringify({type:'join',sessionId}));};socket.current.onmessage=event=>{const data=JSON.parse(event.data);if(data.type==='offer'){handleOffer(data);}else if(data.type==='answer'){handleAnswer(data);}else if(data.type==='ice-candidate'){handleNewICECandidateMsg(data);}};socket.current.onclose=()=>{console.log('WebSocket connection closed');};// Cleanup\nreturn()=>{socket.current.close();};},[sessionId,handleOffer,handleAnswer,handleNewICECandidateMsg]);return/*#__PURE__*/_jsx(\"audio\",{ref:audioRef,autoPlay:true});};export default AudioChat;","map":{"version":3,"names":["React","useRef","useEffect","useCallback","useMemo","jsx","_jsx","AudioChat","_ref","sessionId","audioRef","socket","peerConnections","config","iceServers","urls","handleOffer","offer","peerConnection","RTCPeerConnection","sender","setRemoteDescription","RTCSessionDescription","navigator","mediaDevices","getUserMedia","audio","then","stream","getTracks","forEach","track","addTrack","createAnswer","answer","setLocalDescription","current","send","JSON","stringify","type","sdp","ontrack","event","srcObject","streams","onicecandidate","candidate","handleAnswer","handleNewICECandidateMsg","msg","RTCIceCandidate","addIceCandidate","WebSocket","onopen","console","log","onmessage","data","parse","onclose","close","ref","autoPlay"],"sources":["C:/Users/wesle/OneDrive/Documents/VLCS/myProject/VirtualLCS/frontend/src/AudioChat.jsx"],"sourcesContent":["import React, { useRef, useEffect, useCallback, useMemo } from 'react';\r\n\r\nconst AudioChat = ({ sessionId }) => {\r\n  const audioRef = useRef(null);\r\n  const socket = useRef(null); // Persist WebSocket instance\r\n  const peerConnections = useMemo(() => ({}), []); // Memoized peer connections\r\n  const config = useMemo(() => ({\r\n    iceServers: [{ urls: 'stun:stun.l.google.com:19302' }]\r\n  }), []);\r\n\r\n  // Memoized event handlers\r\n  const handleOffer = useCallback((offer) => {\r\n    const peerConnection = new RTCPeerConnection(config);\r\n    peerConnections[offer.sender] = peerConnection;\r\n\r\n    peerConnection.setRemoteDescription(new RTCSessionDescription(offer));\r\n    navigator.mediaDevices.getUserMedia({ audio: true })\r\n      .then(stream => {\r\n        stream.getTracks().forEach(track => peerConnection.addTrack(track, stream));\r\n      });\r\n    peerConnection.createAnswer()\r\n      .then(answer => {\r\n        peerConnection.setLocalDescription(answer);\r\n        socket.current.send(JSON.stringify({\r\n          type: 'answer',\r\n          sdp: answer,\r\n          sender: 'client'\r\n        }));\r\n      });\r\n    peerConnection.ontrack = (event) => {\r\n      audioRef.current.srcObject = event.streams[0];\r\n    };\r\n    peerConnection.onicecandidate = (event) => {\r\n      if (event.candidate) {\r\n        socket.current.send(JSON.stringify({\r\n          type: 'ice-candidate',\r\n          candidate: event.candidate,\r\n          sender: 'client'\r\n        }));\r\n      }\r\n    };\r\n  }, [config, peerConnections]);\r\n\r\n  const handleAnswer = useCallback((answer) => {\r\n    const peerConnection = peerConnections[answer.sender];\r\n    peerConnection.setRemoteDescription(new RTCSessionDescription(answer));\r\n  }, [peerConnections]);\r\n\r\n  const handleNewICECandidateMsg = useCallback((msg) => {\r\n    const candidate = new RTCIceCandidate(msg.candidate);\r\n    const peerConnection = peerConnections[msg.sender];\r\n    peerConnection.addIceCandidate(candidate);\r\n  }, [peerConnections]);\r\n\r\n  // WebSocket setup and cleanup\r\n  useEffect(() => {\r\n    socket.current = new WebSocket(`ws://localhost:8080/ws/session/${sessionId}/`);\r\n\r\n    socket.current.onopen = () => {\r\n      console.log('WebSocket connection established');\r\n      socket.current.send(JSON.stringify({ type: 'join', sessionId }));\r\n    };\r\n\r\n    socket.current.onmessage = (event) => {\r\n      const data = JSON.parse(event.data);\r\n      if (data.type === 'offer') {\r\n        handleOffer(data);\r\n      } else if (data.type === 'answer') {\r\n        handleAnswer(data);\r\n      } else if (data.type === 'ice-candidate') {\r\n        handleNewICECandidateMsg(data);\r\n      }\r\n    };\r\n\r\n    socket.current.onclose = () => {\r\n      console.log('WebSocket connection closed');\r\n    };\r\n\r\n    // Cleanup\r\n    return () => {\r\n      socket.current.close();\r\n    };\r\n  }, [sessionId, handleOffer, handleAnswer, handleNewICECandidateMsg]);\r\n\r\n  return <audio ref={audioRef} autoPlay />;\r\n};\r\n\r\nexport default AudioChat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}