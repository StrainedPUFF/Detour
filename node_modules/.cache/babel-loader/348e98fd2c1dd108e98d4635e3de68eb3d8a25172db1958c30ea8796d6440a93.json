{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wesle\\\\OneDrive\\\\Documents\\\\VLCS\\\\myProject\\\\VirtualLCS\\\\frontend\\\\src\\\\DocumentCanvas.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useLayoutEffect } from \"react\";\nimport * as pdfjs from \"pdfjs-dist\";\nimport { useSession } from \"./SessionContext\"; // Import the session context hook\n\n// Set the worker source for pdf.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\npdfjs.GlobalWorkerOptions.workerSrc = \"https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.14.305/pdf.worker.min.js\";\nconst DocumentCanvas = () => {\n  _s();\n  const {\n    sessionId,\n    documentUrl\n  } = useSession(); // Access the sessionId from the context\n  const canvasRef = useRef(null);\n  // eslint-disable-next-line\n  const [canvas, setCanvas] = useState(null); // Tracks the Fabric.js canvas instance\n  const socket = useRef(null);\n  const [currentPage, setCurrentPage] = useState(1); // Tracks the current PDF page\n  const [totalPages, setTotalPages] = useState(0); // Tracks the total number of pages in the PDF\n  const reconnectAttemptsRef = useRef(0); // Tracks reconnect attempts\n  const reconnectInterval = 5000; // Reconnection interval (milliseconds)\n  const maxReconnectAttempts = 5; // Max number of retry attempts\n  const fabric = require(\"fabric\").fabric;\n  useLayoutEffect(() => {\n    console.log(\"Initializing the canvas...\");\n    if (canvasRef.current) {\n      const canvasInstance = new fabric.Canvas(canvasRef.current, {\n        width: 800,\n        height: 600\n      });\n      setCanvas(canvasInstance);\n      const renderPDFToCanvas = async pageNumber => {\n        if (documentUrl) {\n          try {\n            const pdf = await pdfjs.getDocument(documentUrl).promise; // Load PDF\n            setTotalPages(pdf.numPages); // Set the total number of pages\n\n            const page = await pdf.getPage(pageNumber); // Load the specified page\n            const viewport = page.getViewport({\n              scale: 1.5\n            }); // Adjust scale as needed\n\n            const pdfCanvas = document.createElement(\"canvas\");\n            pdfCanvas.width = viewport.width;\n            pdfCanvas.height = viewport.height;\n            const context = pdfCanvas.getContext(\"2d\");\n            await page.render({\n              canvasContext: context,\n              viewport\n            }).promise;\n\n            // Convert PDF canvas to an image and set as background\n            fabric.Image.fromURL(pdfCanvas.toDataURL(), oImg => {\n              canvasInstance.setBackgroundImage(oImg, canvasInstance.renderAll.bind(canvasInstance));\n              console.log(`PDF page ${pageNumber} rendered as background image.`);\n            });\n          } catch (error) {\n            console.error(\"Error rendering PDF:\", error);\n          }\n        } else {\n          console.warn(\"No document URL provided.\");\n        }\n      };\n      renderPDFToCanvas(currentPage);\n      const connectWebSocket = () => {\n        if (!sessionId) {\n          console.error(\"Session ID is undefined. Unable to initialize WebSocket.\");\n          return;\n        }\n        const webSocketUrl = `ws://127.0.0.1:8080/ws/session/${sessionId}/`;\n        console.log(\"Attempting WebSocket connection to:\", webSocketUrl);\n        socket.current = new WebSocket(webSocketUrl);\n        socket.current.onopen = () => {\n          console.log(\"WebSocket connection established successfully.\");\n          reconnectAttemptsRef.current = 0; // Reset reconnect attempts\n        };\n        socket.current.onmessage = event => {\n          const data = JSON.parse(event.data);\n          if (data.type === \"draw\") {\n            console.log(\"Received drawing data:\", data.payload);\n            fabric.util.enlivenObjects([data.payload], objects => {\n              objects.forEach(obj => {\n                if (canvasInstance) {\n                  canvasInstance.add(obj);\n                }\n              });\n            });\n          }\n        };\n        socket.current.onclose = () => {\n          console.warn(\"WebSocket connection closed.\");\n          if (reconnectAttemptsRef.current < maxReconnectAttempts) {\n            reconnectAttemptsRef.current += 1;\n            console.warn(`Reconnecting... (${reconnectAttemptsRef.current}/${maxReconnectAttempts})`);\n            setTimeout(connectWebSocket, reconnectInterval);\n          } else {\n            console.error(\"Max reconnection attempts reached. Unable to reconnect.\");\n          }\n        };\n        socket.current.onerror = error => {\n          console.error(\"WebSocket encountered an error:\", error.message);\n        };\n      };\n\n      // Establish WebSocket connection\n      connectWebSocket();\n\n      // Enable drawing mode\n      canvasInstance.isDrawingMode = true;\n\n      // Handle drawing events\n      canvasInstance.on(\"path:created\", e => {\n        const path = e.path;\n        emitObjectData(path);\n      });\n\n      // Emit data for WebSocket transmission\n      const emitObjectData = object => {\n        try {\n          if (socket.current && socket.current.readyState === WebSocket.OPEN) {\n            socket.current.send(JSON.stringify({\n              type: \"draw\",\n              payload: object.toJSON()\n            }));\n            console.log(\"Emitted object data:\", object);\n          }\n        } catch (error) {\n          console.error(\"Error emitting object data:\", error.message);\n        }\n      };\n\n      // Cleanup on component unmount\n      return () => {\n        console.log(\"Cleaning up canvas and WebSocket...\");\n        if (canvasInstance) {\n          canvasInstance.dispose();\n        }\n        if (socket.current) {\n          socket.current.close();\n        }\n      };\n    } else {\n      console.warn(\"Canvas reference is not ready yet.\");\n    }\n  }, [documentUrl, sessionId, currentPage]); // Reinitialize if documentUrl, sessionId, or currentPage changes\n\n  const goToNextPage = () => {\n    if (currentPage < totalPages) {\n      setCurrentPage(prevPage => prevPage + 1);\n    }\n  };\n  const goToPreviousPage = () => {\n    if (currentPage > 1) {\n      setCurrentPage(prevPage => prevPage - 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), !documentUrl && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: \"No document available to load. Please check the session data.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: goToPreviousPage,\n        disabled: currentPage === 1,\n        children: \"Previous Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: goToNextPage,\n        disabled: currentPage === totalPages || totalPages === 0,\n        children: \"Next Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Page \", currentPage, \" of \", totalPages]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n};\n_s(DocumentCanvas, \"tnn8wsRZqL7MGPrXgB3yls8+k5c=\", false, function () {\n  return [useSession];\n});\n_c = DocumentCanvas;\nexport default DocumentCanvas;\nvar _c;\n$RefreshReg$(_c, \"DocumentCanvas\");","map":{"version":3,"names":["React","useState","useRef","useLayoutEffect","pdfjs","useSession","jsxDEV","_jsxDEV","GlobalWorkerOptions","workerSrc","DocumentCanvas","_s","sessionId","documentUrl","canvasRef","canvas","setCanvas","socket","currentPage","setCurrentPage","totalPages","setTotalPages","reconnectAttemptsRef","reconnectInterval","maxReconnectAttempts","fabric","require","console","log","current","canvasInstance","Canvas","width","height","renderPDFToCanvas","pageNumber","pdf","getDocument","promise","numPages","page","getPage","viewport","getViewport","scale","pdfCanvas","document","createElement","context","getContext","render","canvasContext","Image","fromURL","toDataURL","oImg","setBackgroundImage","renderAll","bind","error","warn","connectWebSocket","webSocketUrl","WebSocket","onopen","onmessage","event","data","JSON","parse","type","payload","util","enlivenObjects","objects","forEach","obj","add","onclose","setTimeout","onerror","message","isDrawingMode","on","e","path","emitObjectData","object","readyState","OPEN","send","stringify","toJSON","dispose","close","goToNextPage","prevPage","goToPreviousPage","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","style","color","marginTop","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/wesle/OneDrive/Documents/VLCS/myProject/VirtualLCS/frontend/src/DocumentCanvas.jsx"],"sourcesContent":["import React, { useState, useRef, useLayoutEffect } from \"react\";\r\nimport * as pdfjs from \"pdfjs-dist\";\r\nimport { useSession } from \"./SessionContext\"; // Import the session context hook\r\n\r\n// Set the worker source for pdf.js\r\npdfjs.GlobalWorkerOptions.workerSrc =\r\n  \"https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.14.305/pdf.worker.min.js\";\r\n\r\nconst DocumentCanvas = () => {\r\n  const { sessionId, documentUrl } = useSession(); // Access the sessionId from the context\r\n  const canvasRef = useRef(null);\r\n  // eslint-disable-next-line\r\n  const [canvas, setCanvas] = useState(null); // Tracks the Fabric.js canvas instance\r\n  const socket = useRef(null);\r\n  const [currentPage, setCurrentPage] = useState(1); // Tracks the current PDF page\r\n  const [totalPages, setTotalPages] = useState(0); // Tracks the total number of pages in the PDF\r\n  const reconnectAttemptsRef = useRef(0); // Tracks reconnect attempts\r\n  const reconnectInterval = 5000; // Reconnection interval (milliseconds)\r\n  const maxReconnectAttempts = 5; // Max number of retry attempts\r\n  const fabric = require(\"fabric\").fabric;\r\n\r\n  useLayoutEffect(() => {\r\n    console.log(\"Initializing the canvas...\");\r\n    if (canvasRef.current) {\r\n      const canvasInstance = new fabric.Canvas(canvasRef.current, {\r\n        width: 800,\r\n        height: 600,\r\n      });\r\n      setCanvas(canvasInstance);\r\n\r\n      const renderPDFToCanvas = async (pageNumber) => {\r\n        if (documentUrl) {\r\n          try {\r\n            const pdf = await pdfjs.getDocument(documentUrl).promise; // Load PDF\r\n            setTotalPages(pdf.numPages); // Set the total number of pages\r\n\r\n            const page = await pdf.getPage(pageNumber); // Load the specified page\r\n            const viewport = page.getViewport({ scale: 1.5 }); // Adjust scale as needed\r\n\r\n            const pdfCanvas = document.createElement(\"canvas\");\r\n            pdfCanvas.width = viewport.width;\r\n            pdfCanvas.height = viewport.height;\r\n\r\n            const context = pdfCanvas.getContext(\"2d\");\r\n            await page.render({ canvasContext: context, viewport }).promise;\r\n\r\n            // Convert PDF canvas to an image and set as background\r\n            fabric.Image.fromURL(pdfCanvas.toDataURL(), (oImg) => {\r\n              canvasInstance.setBackgroundImage(\r\n                oImg,\r\n                canvasInstance.renderAll.bind(canvasInstance)\r\n              );\r\n              console.log(`PDF page ${pageNumber} rendered as background image.`);\r\n            });\r\n          } catch (error) {\r\n            console.error(\"Error rendering PDF:\", error);\r\n          }\r\n        } else {\r\n          console.warn(\"No document URL provided.\");\r\n        }\r\n      };\r\n\r\n      renderPDFToCanvas(currentPage);\r\n\r\n      const connectWebSocket = () => {\r\n        if (!sessionId) {\r\n          console.error(\r\n            \"Session ID is undefined. Unable to initialize WebSocket.\"\r\n          );\r\n          return;\r\n        }\r\n\r\n        const webSocketUrl = `ws://127.0.0.1:8080/ws/session/${sessionId}/`;\r\n        console.log(\"Attempting WebSocket connection to:\", webSocketUrl);\r\n\r\n        socket.current = new WebSocket(webSocketUrl);\r\n\r\n        socket.current.onopen = () => {\r\n          console.log(\"WebSocket connection established successfully.\");\r\n          reconnectAttemptsRef.current = 0; // Reset reconnect attempts\r\n        };\r\n\r\n        socket.current.onmessage = (event) => {\r\n          const data = JSON.parse(event.data);\r\n          if (data.type === \"draw\") {\r\n            console.log(\"Received drawing data:\", data.payload);\r\n            fabric.util.enlivenObjects([data.payload], (objects) => {\r\n              objects.forEach((obj) => {\r\n                if (canvasInstance) {\r\n                  canvasInstance.add(obj);\r\n                }\r\n              });\r\n            });\r\n          }\r\n        };\r\n\r\n        socket.current.onclose = () => {\r\n          console.warn(\"WebSocket connection closed.\");\r\n          if (reconnectAttemptsRef.current < maxReconnectAttempts) {\r\n            reconnectAttemptsRef.current += 1;\r\n            console.warn(\r\n              `Reconnecting... (${reconnectAttemptsRef.current}/${maxReconnectAttempts})`\r\n            );\r\n            setTimeout(connectWebSocket, reconnectInterval);\r\n          } else {\r\n            console.error(\r\n              \"Max reconnection attempts reached. Unable to reconnect.\"\r\n            );\r\n          }\r\n        };\r\n\r\n        socket.current.onerror = (error) => {\r\n          console.error(\"WebSocket encountered an error:\", error.message);\r\n        };\r\n      };\r\n\r\n      // Establish WebSocket connection\r\n      connectWebSocket();\r\n\r\n      // Enable drawing mode\r\n      canvasInstance.isDrawingMode = true;\r\n\r\n      // Handle drawing events\r\n      canvasInstance.on(\"path:created\", (e) => {\r\n        const path = e.path;\r\n        emitObjectData(path);\r\n      });\r\n\r\n      // Emit data for WebSocket transmission\r\n      const emitObjectData = (object) => {\r\n        try {\r\n          if (socket.current && socket.current.readyState === WebSocket.OPEN) {\r\n            socket.current.send(\r\n              JSON.stringify({\r\n                type: \"draw\",\r\n                payload: object.toJSON(),\r\n              })\r\n            );\r\n            console.log(\"Emitted object data:\", object);\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error emitting object data:\", error.message);\r\n        }\r\n      };\r\n\r\n      // Cleanup on component unmount\r\n      return () => {\r\n        console.log(\"Cleaning up canvas and WebSocket...\");\r\n        if (canvasInstance) {\r\n          canvasInstance.dispose();\r\n        }\r\n        if (socket.current) {\r\n          socket.current.close();\r\n        }\r\n      };\r\n    } else {\r\n      console.warn(\"Canvas reference is not ready yet.\");\r\n    }\r\n  }, [documentUrl, sessionId, currentPage, ]); // Reinitialize if documentUrl, sessionId, or currentPage changes\r\n\r\n  const goToNextPage = () => {\r\n    if (currentPage < totalPages) {\r\n      setCurrentPage((prevPage) => prevPage + 1);\r\n    }\r\n  };\r\n\r\n  const goToPreviousPage = () => {\r\n    if (currentPage > 1) {\r\n      setCurrentPage((prevPage) => prevPage - 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <canvas ref={canvasRef} />\r\n      {!documentUrl && (\r\n        <p style={{ color: \"red\" }}>\r\n          No document available to load. Please check the session data.\r\n        </p>\r\n      )}\r\n      <div style={{ marginTop: \"10px\" }}>\r\n        <button onClick={goToPreviousPage} disabled={currentPage === 1}>\r\n          Previous Page\r\n        </button>\r\n        <button\r\n          onClick={goToNextPage}\r\n          disabled={currentPage === totalPages || totalPages === 0}\r\n        >\r\n          Next Page\r\n        </button>\r\n        <p>\r\n          Page {currentPage} of {totalPages}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DocumentCanvas;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}