{"ast":null,"code":"import React,{useState,useEffect}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const FetchSessionData=_ref=>{let{onSessionData}=_ref;const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[hasFetched,setHasFetched]=useState(false);// Ensure data is fetched only once\nuseEffect(()=>{if(typeof onSessionData!=='function'){console.error('onSessionData prop is required and must be a function.');return;}if(hasFetched){return;// Prevent duplicate fetches\n}const fetchData=async()=>{try{console.log('Fetching session data...');const response=await fetch('http://127.0.0.1:8000/api/get-session-id/',{credentials:'include'// Include authentication credentials\n});if(!response.ok){throw new Error(`Failed to fetch session data: ${response.status}`);}const data=await response.json();if(!data||!data.id){throw new Error(`Session ID is missing in the response. Data: ${JSON.stringify(data)}`);}console.log('Fetched session data:',data);onSessionData(data);// Pass fetched data to the parent\nsetError(null);setHasFetched(true);// Mark as fetched\n}catch(err){const errorMessage=err instanceof Error?err.message:typeof err==='string'?err:(err===null||err===void 0?void 0:err.error)||JSON.stringify(err);console.error('Error fetching session data:',errorMessage);setError(errorMessage);}finally{setLoading(false);// Ensure loading state is stopped\n}};fetchData();},[onSessionData,hasFetched]);if(loading){return/*#__PURE__*/_jsx(\"p\",{children:\"Loading session data...\"});}if(error){return/*#__PURE__*/_jsxs(\"div\",{style:{color:'red',padding:'10px',border:'1px solid red'},children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Error: \",error]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>window.location.reload(),children:\"Retry\"})]});}return null;// No UI as its purpose is fetching\n};export default FetchSessionData;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","FetchSessionData","_ref","onSessionData","loading","setLoading","error","setError","hasFetched","setHasFetched","console","fetchData","log","response","fetch","credentials","ok","Error","status","data","json","id","JSON","stringify","err","errorMessage","message","children","style","color","padding","border","onClick","window","location","reload"],"sources":["C:/Users/wesle/OneDrive/Documents/VLCS/myProject/VirtualLCS/frontend/src/FetchSessionData.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst FetchSessionData = ({ onSessionData }) => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [hasFetched, setHasFetched] = useState(false); // Ensure data is fetched only once\r\n\r\n  useEffect(() => {\r\n    if (typeof onSessionData !== 'function') {\r\n      console.error('onSessionData prop is required and must be a function.');\r\n      return;\r\n    }\r\n\r\n    if (hasFetched) {\r\n      return; // Prevent duplicate fetches\r\n    }\r\n\r\n    const fetchData = async () => {\r\n      try {\r\n        console.log('Fetching session data...');\r\n        \r\n        const response = await fetch('http://127.0.0.1:8000/api/get-session-id/', {\r\n          credentials: 'include', // Include authentication credentials\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`Failed to fetch session data: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n\r\n        if (!data || !data.id) {\r\n          throw new Error(`Session ID is missing in the response. Data: ${JSON.stringify(data)}`);\r\n        }\r\n\r\n        console.log('Fetched session data:', data);\r\n        onSessionData(data); // Pass fetched data to the parent\r\n        setError(null);\r\n        setHasFetched(true); // Mark as fetched\r\n      } catch (err) {\r\n        const errorMessage =\r\n          err instanceof Error\r\n            ? err.message\r\n            : typeof err === 'string'\r\n            ? err\r\n            : err?.error || JSON.stringify(err);\r\n\r\n        console.error('Error fetching session data:', errorMessage);\r\n        setError(errorMessage);\r\n      } finally {\r\n        setLoading(false); // Ensure loading state is stopped\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [onSessionData, hasFetched]);\r\n\r\n  if (loading) {\r\n    return <p>Loading session data...</p>;\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div style={{ color: 'red', padding: '10px', border: '1px solid red' }}>\r\n        <p>Error: {error}</p>\r\n        <button onClick={() => window.location.reload()}>Retry</button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return null; // No UI as its purpose is fetching\r\n};\r\n\r\nexport default FetchSessionData;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}