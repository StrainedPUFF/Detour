{"ast":null,"code":"import React,{useState,useEffect}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const FetchSessionData=_ref=>{let{onSessionData}=_ref;const[loading,setLoading]=useState(true);const[error,setError]=useState(null);useEffect(()=>{const fetchData=async()=>{try{console.log('Fetching session data...');const response=await fetch('http://127.0.0.1:8000/api/get-session-id/',{credentials:'include'// Include authentication credentials (e.g., cookies)\n});if(!response.ok){throw new Error(`Failed to fetch session data: ${response.status}`);}const data=await response.json();if(data.error){throw new Error(data.error);}console.log('Fetched session data:',data);onSessionData(data);// Pass data (including sessionId) to parent component\n}catch(err){let errorMessage='An unknown error occurred.';// Default error message\nif(err instanceof Error){errorMessage=err.message;// Use the error message from the Error object\n}else if(typeof err==='string'){errorMessage=err;// Handle plain string errors\n}else if(err&&typeof err==='object'){errorMessage=err.error||JSON.stringify(err);// Handle API errors with 'error' key or fallback to JSON\n}console.error('Error fetching session data:',errorMessage);setError(errorMessage);}finally{setLoading(false);}};fetchData();},[onSessionData]);if(loading){return/*#__PURE__*/_jsx(\"p\",{children:\"Loading session data...\"});}if(error){return/*#__PURE__*/_jsxs(\"p\",{style:{color:'red'},children:[\"Error: \",error]});}return null;// No UI since data is passed to the parent\n};export default FetchSessionData;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","FetchSessionData","_ref","onSessionData","loading","setLoading","error","setError","fetchData","console","log","response","fetch","credentials","ok","Error","status","data","json","err","errorMessage","message","JSON","stringify","children","style","color"],"sources":["C:/Users/wesle/OneDrive/Documents/VLCS/myProject/VirtualLCS/frontend/src/FetchSessionData.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst FetchSessionData = ({ onSessionData }) => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        console.log('Fetching session data...');\r\n        const response = await fetch('http://127.0.0.1:8000/api/get-session-id/', {\r\n          credentials: 'include', // Include authentication credentials (e.g., cookies)\r\n        });\r\n        if (!response.ok) {\r\n          throw new Error(`Failed to fetch session data: ${response.status}`);\r\n        }\r\n        const data = await response.json();\r\n        if (data.error) {\r\n          throw new Error(data.error);\r\n        }\r\n        console.log('Fetched session data:', data);\r\n        onSessionData(data); // Pass data (including sessionId) to parent component\r\n      } catch (err) {\r\n        let errorMessage = 'An unknown error occurred.'; // Default error message\r\n        \r\n        if (err instanceof Error) {\r\n            errorMessage = err.message; // Use the error message from the Error object\r\n        } else if (typeof err === 'string') {\r\n            errorMessage = err; // Handle plain string errors\r\n        } else if (err && typeof err === 'object') {\r\n            errorMessage = err.error || JSON.stringify(err); // Handle API errors with 'error' key or fallback to JSON\r\n        }\r\n    \r\n        console.error('Error fetching session data:', errorMessage);\r\n        setError(errorMessage);\r\n    }  \r\n       finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [onSessionData]);\r\n\r\n  if (loading) {\r\n    return <p>Loading session data...</p>;\r\n  }\r\n\r\n  if (error) {\r\n    return <p style={{ color: 'red' }}>Error: {error}</p>;\r\n  }\r\n\r\n  return null; // No UI since data is passed to the parent\r\n};\r\n\r\nexport default FetchSessionData;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnD,KAAM,CAAAC,gBAAgB,CAAGC,IAAA,EAAuB,IAAtB,CAAEC,aAAc,CAAC,CAAAD,IAAA,CACzC,KAAM,CAACE,OAAO,CAAEC,UAAU,CAAC,CAAGV,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAACW,KAAK,CAAEC,QAAQ,CAAC,CAAGZ,QAAQ,CAAC,IAAI,CAAC,CAExCC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAY,SAAS,CAAG,KAAAA,CAAA,GAAY,CAC5B,GAAI,CACFC,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC,CACvC,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,2CAA2C,CAAE,CACxEC,WAAW,CAAE,SAAW;AAC1B,CAAC,CAAC,CACF,GAAI,CAACF,QAAQ,CAACG,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,iCAAiCJ,QAAQ,CAACK,MAAM,EAAE,CAAC,CACrE,CACA,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAN,QAAQ,CAACO,IAAI,CAAC,CAAC,CAClC,GAAID,IAAI,CAACX,KAAK,CAAE,CACd,KAAM,IAAI,CAAAS,KAAK,CAACE,IAAI,CAACX,KAAK,CAAC,CAC7B,CACAG,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAEO,IAAI,CAAC,CAC1Cd,aAAa,CAACc,IAAI,CAAC,CAAE;AACvB,CAAE,MAAOE,GAAG,CAAE,CACZ,GAAI,CAAAC,YAAY,CAAG,4BAA4B,CAAE;AAEjD,GAAID,GAAG,WAAY,CAAAJ,KAAK,CAAE,CACtBK,YAAY,CAAGD,GAAG,CAACE,OAAO,CAAE;AAChC,CAAC,IAAM,IAAI,MAAO,CAAAF,GAAG,GAAK,QAAQ,CAAE,CAChCC,YAAY,CAAGD,GAAG,CAAE;AACxB,CAAC,IAAM,IAAIA,GAAG,EAAI,MAAO,CAAAA,GAAG,GAAK,QAAQ,CAAE,CACvCC,YAAY,CAAGD,GAAG,CAACb,KAAK,EAAIgB,IAAI,CAACC,SAAS,CAACJ,GAAG,CAAC,CAAE;AACrD,CAEAV,OAAO,CAACH,KAAK,CAAC,8BAA8B,CAAEc,YAAY,CAAC,CAC3Db,QAAQ,CAACa,YAAY,CAAC,CAC1B,CAAC,OACU,CACPf,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAEDG,SAAS,CAAC,CAAC,CACb,CAAC,CAAE,CAACL,aAAa,CAAC,CAAC,CAEnB,GAAIC,OAAO,CAAE,CACX,mBAAON,IAAA,MAAA0B,QAAA,CAAG,yBAAuB,CAAG,CAAC,CACvC,CAEA,GAAIlB,KAAK,CAAE,CACT,mBAAON,KAAA,MAAGyB,KAAK,CAAE,CAAEC,KAAK,CAAE,KAAM,CAAE,CAAAF,QAAA,EAAC,SAAO,CAAClB,KAAK,EAAI,CAAC,CACvD,CAEA,MAAO,KAAI,CAAE;AACf,CAAC,CAED,cAAe,CAAAL,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}