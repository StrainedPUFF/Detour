{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wesle\\\\OneDrive\\\\Documents\\\\VLCS\\\\myProject\\\\VirtualLCS\\\\frontend\\\\src\\\\FetchSessionData.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FetchSessionData = ({\n  setSessionId,\n  setDocumentUrl,\n  setError\n}) => {\n  _s();\n  useEffect(() => {\n    const fetchSessionData = async () => {\n      try {\n        console.log('Fetching session ID...');\n        const sessionIdResponse = await fetch('/api/get-session-id/');\n        if (!sessionIdResponse.ok) throw new Error('Failed to fetch session ID');\n        const sessionIdData = await sessionIdResponse.json();\n        console.log('Received session ID:', sessionIdData.sessionId);\n        if (!sessionIdData.sessionId) {\n          throw new Error('Invalid session ID received from backend');\n        }\n        setSessionId(sessionIdData.sessionId);\n        console.log(`Fetching session data for session ID: ${sessionIdData.sessionId}`);\n        const sessionDataResponse = await fetch(`/api/session-data/${sessionIdData.sessionId}/`);\n        if (!sessionDataResponse.ok) throw new Error('Failed to fetch session data');\n        const sessionData = await sessionDataResponse.json();\n        setDocumentUrl(sessionData.documentUrl);\n      } catch (error) {\n        console.error('Error fetching session data:', error);\n        setError(error.message);\n      }\n    };\n    fetchSessionData();\n  }, [setSessionId, setDocumentUrl, setError]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 10\n  }, this);\n};\n_s(FetchSessionData, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = FetchSessionData;\nexport default FetchSessionData;\nvar _c;\n$RefreshReg$(_c, \"FetchSessionData\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","FetchSessionData","setSessionId","setDocumentUrl","setError","_s","fetchSessionData","console","log","sessionIdResponse","fetch","ok","Error","sessionIdData","json","sessionId","sessionDataResponse","sessionData","documentUrl","error","message","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/wesle/OneDrive/Documents/VLCS/myProject/VirtualLCS/frontend/src/FetchSessionData.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\n\r\nconst FetchSessionData = ({ setSessionId, setDocumentUrl, setError }) => {\r\n  useEffect(() => {\r\n    const fetchSessionData = async () => {\r\n      try {\r\n        console.log('Fetching session ID...');\r\n        const sessionIdResponse = await fetch('/api/get-session-id/');\r\n        if (!sessionIdResponse.ok) throw new Error('Failed to fetch session ID');\r\n        const sessionIdData = await sessionIdResponse.json();\r\n\r\n        console.log('Received session ID:', sessionIdData.sessionId);\r\n\r\n        if (!sessionIdData.sessionId) {\r\n          throw new Error('Invalid session ID received from backend');\r\n        }\r\n        setSessionId(sessionIdData.sessionId);\r\n\r\n        console.log(`Fetching session data for session ID: ${sessionIdData.sessionId}`);\r\n        const sessionDataResponse = await fetch(`/api/session-data/${sessionIdData.sessionId}/`);\r\n        if (!sessionDataResponse.ok) throw new Error('Failed to fetch session data');\r\n        const sessionData = await sessionDataResponse.json();\r\n        setDocumentUrl(sessionData.documentUrl);\r\n      } catch (error) {\r\n        console.error('Error fetching session data:', error);\r\n        setError(error.message);\r\n      }\r\n    };\r\n\r\n    fetchSessionData();\r\n  }, [setSessionId, setDocumentUrl, setError]);\r\n\r\n  return <div>Loading...</div>;\r\n};\r\n\r\nexport default FetchSessionData;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC,YAAY;EAAEC,cAAc;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACvEP,SAAS,CAAC,MAAM;IACd,MAAMQ,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACFC,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;QACrC,MAAMC,iBAAiB,GAAG,MAAMC,KAAK,CAAC,sBAAsB,CAAC;QAC7D,IAAI,CAACD,iBAAiB,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;QACxE,MAAMC,aAAa,GAAG,MAAMJ,iBAAiB,CAACK,IAAI,CAAC,CAAC;QAEpDP,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEK,aAAa,CAACE,SAAS,CAAC;QAE5D,IAAI,CAACF,aAAa,CAACE,SAAS,EAAE;UAC5B,MAAM,IAAIH,KAAK,CAAC,0CAA0C,CAAC;QAC7D;QACAV,YAAY,CAACW,aAAa,CAACE,SAAS,CAAC;QAErCR,OAAO,CAACC,GAAG,CAAC,yCAAyCK,aAAa,CAACE,SAAS,EAAE,CAAC;QAC/E,MAAMC,mBAAmB,GAAG,MAAMN,KAAK,CAAC,qBAAqBG,aAAa,CAACE,SAAS,GAAG,CAAC;QACxF,IAAI,CAACC,mBAAmB,CAACL,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;QAC5E,MAAMK,WAAW,GAAG,MAAMD,mBAAmB,CAACF,IAAI,CAAC,CAAC;QACpDX,cAAc,CAACc,WAAW,CAACC,WAAW,CAAC;MACzC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdZ,OAAO,CAACY,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;QACpDf,QAAQ,CAACe,KAAK,CAACC,OAAO,CAAC;MACzB;IACF,CAAC;IAEDd,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,CAACJ,YAAY,EAAEC,cAAc,EAAEC,QAAQ,CAAC,CAAC;EAE5C,oBAAOJ,OAAA;IAAAqB,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAC9B,CAAC;AAACpB,EAAA,CA/BIJ,gBAAgB;AAAAyB,EAAA,GAAhBzB,gBAAgB;AAiCtB,eAAeA,gBAAgB;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}