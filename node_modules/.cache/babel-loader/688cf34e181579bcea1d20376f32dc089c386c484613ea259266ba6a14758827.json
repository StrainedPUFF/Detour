{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wesle\\\\OneDrive\\\\Documents\\\\VLCS\\\\myProject\\\\VirtualLCS\\\\frontend\\\\src\\\\FetchSessionData.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FetchSessionData = ({\n  onSessionData\n}) => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [hasFetched, setHasFetched] = useState(false); // Ensure data is fetched only once\n\n  useEffect(() => {\n    if (typeof onSessionData !== 'function') {\n      console.error('onSessionData prop is required and must be a function.');\n      return;\n    }\n    if (hasFetched) {\n      return; // Prevent duplicate fetches\n    }\n    const fetchData = async () => {\n      try {\n        console.log('Fetching session data...');\n        const response = await fetch('http://127.0.0.1:8000/api/get-session-id/', {\n          credentials: 'include' // Include authentication credentials\n        });\n        if (!response.ok) {\n          throw new Error(`Failed to fetch session data: ${response.status}`);\n        }\n        const data = await response.json();\n        if (!data || !data.id) {\n          throw new Error(`Session ID is missing in the response. Data: ${JSON.stringify(data)}`);\n        }\n        console.log('Fetched session data:', data);\n        onSessionData(data); // Pass fetched data to the parent\n        setError(null);\n        setHasFetched(true); // Mark as fetched\n      } catch (err) {\n        const errorMessage = err instanceof Error ? err.message : typeof err === 'string' ? err : (err === null || err === void 0 ? void 0 : err.error) || JSON.stringify(err);\n        console.error('Error fetching session data:', errorMessage);\n        setError(errorMessage);\n      } finally {\n        setLoading(false); // Ensure loading state is stopped\n      }\n    };\n    fetchData();\n  }, [onSessionData, hasFetched]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading session data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red',\n        padding: '10px',\n        border: '1px solid red'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(),\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n  return null; // No UI as its purpose is fetching\n};\n_s(FetchSessionData, \"1xNKfVWP4dlOfS9mMZRQPPQe5/U=\");\n_c = FetchSessionData;\nexport default FetchSessionData;\nvar _c;\n$RefreshReg$(_c, \"FetchSessionData\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","FetchSessionData","onSessionData","_s","loading","setLoading","error","setError","hasFetched","setHasFetched","console","fetchData","log","response","fetch","credentials","ok","Error","status","data","json","id","JSON","stringify","err","errorMessage","message","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","padding","border","onClick","window","location","reload","_c","$RefreshReg$"],"sources":["C:/Users/wesle/OneDrive/Documents/VLCS/myProject/VirtualLCS/frontend/src/FetchSessionData.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst FetchSessionData = ({ onSessionData }) => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [hasFetched, setHasFetched] = useState(false); // Ensure data is fetched only once\r\n\r\n  useEffect(() => {\r\n    if (typeof onSessionData !== 'function') {\r\n      console.error('onSessionData prop is required and must be a function.');\r\n      return;\r\n    }\r\n\r\n    if (hasFetched) {\r\n      return; // Prevent duplicate fetches\r\n    }\r\n\r\n    const fetchData = async () => {\r\n      try {\r\n        console.log('Fetching session data...');\r\n        \r\n        const response = await fetch('http://127.0.0.1:8000/api/get-session-id/', {\r\n          credentials: 'include', // Include authentication credentials\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`Failed to fetch session data: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n\r\n        if (!data || !data.id) {\r\n          throw new Error(`Session ID is missing in the response. Data: ${JSON.stringify(data)}`);\r\n        }\r\n\r\n        console.log('Fetched session data:', data);\r\n        onSessionData(data); // Pass fetched data to the parent\r\n        setError(null);\r\n        setHasFetched(true); // Mark as fetched\r\n      } catch (err) {\r\n        const errorMessage =\r\n          err instanceof Error\r\n            ? err.message\r\n            : typeof err === 'string'\r\n            ? err\r\n            : err?.error || JSON.stringify(err);\r\n\r\n        console.error('Error fetching session data:', errorMessage);\r\n        setError(errorMessage);\r\n      } finally {\r\n        setLoading(false); // Ensure loading state is stopped\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [onSessionData, hasFetched]);\r\n\r\n  if (loading) {\r\n    return <p>Loading session data...</p>;\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div style={{ color: 'red', padding: '10px', border: '1px solid red' }}>\r\n        <p>Error: {error}</p>\r\n        <button onClick={() => window.location.reload()}>Retry</button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return null; // No UI as its purpose is fetching\r\n};\r\n\r\nexport default FetchSessionData;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}