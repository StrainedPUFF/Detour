{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wesle\\\\OneDrive\\\\Documents\\\\VLCS\\\\myProject\\\\VirtualLCS\\\\frontend\\\\src\\\\DocumentCanvas.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport { Canvas, Image, util } from 'fabric';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DocumentCanvas = ({\n  documentUrl\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  // eslint-disable-next-line\n  const [canvas, setCanvas] = useState(null);\n  useEffect(() => {\n    console.log('Initializing canvas...');\n    // Create a Fabric.js canvas instance\n    const canvasInstance = new Canvas(canvasRef.current);\n    setCanvas(canvasInstance);\n\n    // Load the background image\n    if (documentUrl) {\n      Image.fromURL(documentUrl, img => {\n        canvasInstance.setBackgroundImage(img, canvasInstance.renderAll.bind(canvasInstance), {\n          crossOrigin: 'anonymous' // Prevent cross-origin issues\n        });\n        console.log('Document URL:', documentUrl);\n      }, {\n        crossOrigin: 'anonymous'\n      } // Handle cross-origin images\n      );\n    } else {\n      console.warn('No document URL provided.');\n    }\n\n    // Set up WebSocket connection\n    const socket = io('http://localhost:3000');\n    socket.on('connect', () => {\n      console.log('Connected to WebSocket server.');\n    });\n\n    // Handle WebSocket errors\n    socket.on('connect_error', error => {\n      console.error('WebSocket connection error:', error.message);\n    });\n\n    // Listen for drawing data from the server\n    socket.on('draw', data => {\n      console.log('Received draw data:', data);\n      util.enlivenObjects([data], objects => {\n        objects.forEach(obj => {\n          if (canvasInstance) {\n            canvasInstance.add(obj);\n          }\n        });\n      });\n    });\n\n    // Emit data when an object is added to the canvas\n    const emitObjectData = object => {\n      try {\n        if (socket) {\n          socket.emit('draw', object.toJSON());\n          console.log('Object emitted:', object);\n        }\n      } catch (error) {\n        console.error('Error emitting object data:', error.message);\n      }\n    };\n    canvasInstance.on('object:added', e => {\n      const object = e.target;\n      emitObjectData(object);\n    });\n\n    // Cleanup on component unmount\n    return () => {\n      canvasInstance.dispose();\n      socket.disconnect();\n    };\n  }, [documentUrl]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: 800,\n      height: 600\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), !documentUrl && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: \"No document available to load.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(DocumentCanvas, \"O0M3y07DOrZjgMFb7j1sGn9s6P8=\");\n_c = DocumentCanvas;\nexport default DocumentCanvas;\nvar _c;\n$RefreshReg$(_c, \"DocumentCanvas\");","map":{"version":3,"names":["React","useState","useRef","useEffect","io","Canvas","Image","util","jsxDEV","_jsxDEV","DocumentCanvas","documentUrl","_s","canvasRef","canvas","setCanvas","console","log","canvasInstance","current","fromURL","img","setBackgroundImage","renderAll","bind","crossOrigin","warn","socket","on","error","message","data","enlivenObjects","objects","forEach","obj","add","emitObjectData","object","emit","toJSON","e","target","dispose","disconnect","children","ref","width","height","fileName","_jsxFileName","lineNumber","columnNumber","style","color","_c","$RefreshReg$"],"sources":["C:/Users/wesle/OneDrive/Documents/VLCS/myProject/VirtualLCS/frontend/src/DocumentCanvas.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\nimport { Canvas, Image, util } from 'fabric';\r\n\r\nconst DocumentCanvas = ({ documentUrl }) => {\r\n  const canvasRef = useRef(null);\r\n  // eslint-disable-next-line\r\n  const [canvas, setCanvas] = useState(null);\r\n\r\n  useEffect(() => {\r\n    console.log('Initializing canvas...');\r\n    // Create a Fabric.js canvas instance\r\n    const canvasInstance = new Canvas(canvasRef.current);\r\n    setCanvas(canvasInstance);\r\n\r\n    // Load the background image\r\n    if (documentUrl) {\r\n      Image.fromURL(\r\n        documentUrl,\r\n        (img) => {\r\n          canvasInstance.setBackgroundImage(\r\n            img,\r\n            canvasInstance.renderAll.bind(canvasInstance),\r\n            {\r\n              crossOrigin: 'anonymous', // Prevent cross-origin issues\r\n            }\r\n          );\r\n          console.log('Document URL:', documentUrl);\r\n        },\r\n        { crossOrigin: 'anonymous' } // Handle cross-origin images\r\n      );\r\n    } else {\r\n      console.warn('No document URL provided.');\r\n    }\r\n\r\n    // Set up WebSocket connection\r\n    const socket = io('http://localhost:3000');\r\n    socket.on('connect', () => {\r\n      console.log('Connected to WebSocket server.');\r\n    });\r\n\r\n    // Handle WebSocket errors\r\n    socket.on('connect_error', (error) => {\r\n      console.error('WebSocket connection error:', error.message);\r\n    });\r\n\r\n    // Listen for drawing data from the server\r\n    socket.on('draw', (data) => {\r\n      console.log('Received draw data:', data);\r\n      util.enlivenObjects([data], (objects) => {\r\n        objects.forEach((obj) => {\r\n          if (canvasInstance) {\r\n            canvasInstance.add(obj);\r\n          }\r\n        });\r\n      });\r\n    });\r\n\r\n    // Emit data when an object is added to the canvas\r\n    const emitObjectData = (object) => {\r\n      try {\r\n        if (socket) {\r\n          socket.emit('draw', object.toJSON());\r\n          console.log('Object emitted:', object);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error emitting object data:', error.message);\r\n      }\r\n    };\r\n\r\n    canvasInstance.on('object:added', (e) => {\r\n      const object = e.target;\r\n      emitObjectData(object);\r\n    });\r\n\r\n    // Cleanup on component unmount\r\n    return () => {\r\n      canvasInstance.dispose();\r\n      socket.disconnect();\r\n    };\r\n  }, [documentUrl]);\r\n\r\n  return (\r\n    <div>\r\n      <canvas ref={canvasRef} width={800} height={600} />\r\n      {!documentUrl && <p style={{ color: 'red' }}>No document available to load.</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DocumentCanvas;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}