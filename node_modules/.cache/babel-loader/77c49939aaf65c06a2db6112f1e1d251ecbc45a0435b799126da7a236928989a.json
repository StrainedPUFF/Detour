{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wesle\\\\OneDrive\\\\Documents\\\\VLCS\\\\myProject\\\\VirtualLCS\\\\frontend\\\\src\\\\DocumentCanvas.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Canvas, Image, util } from 'fabric';\nimport { useSession } from './SessionContext'; // Import the session context hook\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DocumentCanvas = ({\n  documentUrl\n}) => {\n  _s();\n  const {\n    sessionId\n  } = useSession(); // Access the sessionId from the context\n  const canvasRef = useRef(null);\n  // eslint-disable-next-line\n  const [canvas, setCanvas] = useState(null); // Tracks the Fabric.js canvas instance\n  const socket = useRef(null);\n  const reconnectAttemptsRef = useRef(0); // Tracks reconnect attempts\n  const reconnectInterval = 5000; // Reconnection interval (milliseconds)\n  const maxReconnectAttempts = 5; // Max number of retry attempts\n\n  useEffect(() => {\n    console.log('Initializing the canvas...');\n    const canvasInstance = new Canvas(canvasRef.current, {\n      width: 800,\n      height: 600\n    });\n    setCanvas(canvasInstance);\n\n    // Load the document as the canvas background if a valid documentUrl is provided\n    if (documentUrl) {\n      Image.fromURL(documentUrl, img => {\n        canvasInstance.setBackgroundImage(img, canvasInstance.renderAll.bind(canvasInstance), {\n          crossOrigin: 'anonymous' // Prevent cross-origin issues\n        });\n        console.log('Document URL successfully loaded:', documentUrl);\n      }, {\n        crossOrigin: 'anonymous'\n      });\n    } else {\n      console.warn('No document URL provided.');\n    }\n    const connectWebSocket = () => {\n      if (!sessionId) {\n        console.error('Session ID is undefined. Unable to initialize WebSocket.');\n        return;\n      }\n      const webSocketUrl = `ws://127.0.0.1:8080/ws/session/${sessionId}/`;\n      console.log('Attempting WebSocket connection to:', webSocketUrl);\n      socket.current = new WebSocket(webSocketUrl);\n      socket.current.onopen = () => {\n        console.log('WebSocket connection established successfully.');\n        reconnectAttemptsRef.current = 0; // Reset reconnect attempts\n      };\n      socket.current.onmessage = event => {\n        const data = JSON.parse(event.data);\n        if (data.type === 'draw') {\n          console.log('Received drawing data:', data.payload);\n          util.enlivenObjects([data.payload], objects => {\n            objects.forEach(obj => {\n              if (canvasInstance) {\n                canvasInstance.add(obj);\n              }\n            });\n          });\n        }\n      };\n      socket.current.onclose = () => {\n        console.warn('WebSocket connection closed.');\n        if (reconnectAttemptsRef.current < maxReconnectAttempts) {\n          reconnectAttemptsRef.current += 1;\n          console.warn(`Reconnecting... (${reconnectAttemptsRef.current}/${maxReconnectAttempts})`);\n          setTimeout(connectWebSocket, reconnectInterval);\n        } else {\n          console.error('Max reconnection attempts reached. Unable to reconnect.');\n        }\n      };\n      socket.current.onerror = error => {\n        console.error('WebSocket encountered an error:', error.message);\n      };\n    };\n\n    // Establish WebSocket connection\n    connectWebSocket();\n\n    // Enable drawing mode\n    canvasInstance.isDrawingMode = true;\n\n    // Handle drawing events\n    canvasInstance.on('path:created', e => {\n      const path = e.path;\n      emitObjectData(path);\n    });\n\n    // Emit data for WebSocket transmission\n    const emitObjectData = object => {\n      try {\n        if (socket.current && socket.current.readyState === WebSocket.OPEN) {\n          socket.current.send(JSON.stringify({\n            type: 'draw',\n            payload: object.toJSON()\n          }));\n          console.log('Emitted object data:', object);\n        }\n      } catch (error) {\n        console.error('Error emitting object data:', error.message);\n      }\n    };\n\n    // Cleanup on component unmount\n    return () => {\n      console.log('Cleaning up canvas and WebSocket...');\n      if (canvasInstance) {\n        canvasInstance.dispose();\n      }\n      if (socket.current) {\n        socket.current.close();\n      }\n    };\n  }, [documentUrl, sessionId]); // Reinitialize if documentUrl or sessionId changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), !documentUrl && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: \"No document available to load. Please check the session data.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n};\n_s(DocumentCanvas, \"7QTy1w2y/lphHTiH0ZNwJ8CPfDQ=\", false, function () {\n  return [useSession];\n});\n_c = DocumentCanvas;\nexport default DocumentCanvas;\nvar _c;\n$RefreshReg$(_c, \"DocumentCanvas\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Canvas","Image","util","useSession","jsxDEV","_jsxDEV","DocumentCanvas","documentUrl","_s","sessionId","canvasRef","canvas","setCanvas","socket","reconnectAttemptsRef","reconnectInterval","maxReconnectAttempts","console","log","canvasInstance","current","width","height","fromURL","img","setBackgroundImage","renderAll","bind","crossOrigin","warn","connectWebSocket","error","webSocketUrl","WebSocket","onopen","onmessage","event","data","JSON","parse","type","payload","enlivenObjects","objects","forEach","obj","add","onclose","setTimeout","onerror","message","isDrawingMode","on","e","path","emitObjectData","object","readyState","OPEN","send","stringify","toJSON","dispose","close","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","style","color","_c","$RefreshReg$"],"sources":["C:/Users/wesle/OneDrive/Documents/VLCS/myProject/VirtualLCS/frontend/src/DocumentCanvas.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { Canvas, Image, util } from 'fabric';\r\nimport { useSession } from './SessionContext'; // Import the session context hook\r\n\r\nconst DocumentCanvas = ({ documentUrl }) => {\r\n  const { sessionId } = useSession(); // Access the sessionId from the context\r\n  const canvasRef = useRef(null);\r\n  // eslint-disable-next-line\r\n  const [canvas, setCanvas] = useState(null); // Tracks the Fabric.js canvas instance\r\n  const socket = useRef(null);\r\n  const reconnectAttemptsRef = useRef(0); // Tracks reconnect attempts\r\n  const reconnectInterval = 5000; // Reconnection interval (milliseconds)\r\n  const maxReconnectAttempts = 5; // Max number of retry attempts\r\n\r\n  useEffect(() => {\r\n    console.log('Initializing the canvas...');\r\n    const canvasInstance = new Canvas(canvasRef.current, {\r\n      width: 800,\r\n      height: 600,\r\n    });\r\n    setCanvas(canvasInstance);\r\n\r\n    // Load the document as the canvas background if a valid documentUrl is provided\r\n    if (documentUrl) {\r\n      Image.fromURL(\r\n        documentUrl,\r\n        (img) => {\r\n          canvasInstance.setBackgroundImage(\r\n            img,\r\n            canvasInstance.renderAll.bind(canvasInstance),\r\n            {\r\n              crossOrigin: 'anonymous', // Prevent cross-origin issues\r\n            }\r\n          );\r\n          console.log('Document URL successfully loaded:', documentUrl);\r\n        },\r\n        { crossOrigin: 'anonymous' }\r\n      );\r\n    } else {\r\n      console.warn('No document URL provided.');\r\n    } \r\n\r\n    const connectWebSocket = () => {\r\n      if (!sessionId) {\r\n        console.error('Session ID is undefined. Unable to initialize WebSocket.');\r\n        return;\r\n      }\r\n\r\n      const webSocketUrl = `ws://127.0.0.1:8080/ws/session/${sessionId}/`;\r\n      console.log('Attempting WebSocket connection to:', webSocketUrl);\r\n\r\n      socket.current = new WebSocket(webSocketUrl);\r\n\r\n      socket.current.onopen = () => {\r\n        console.log('WebSocket connection established successfully.');\r\n        reconnectAttemptsRef.current = 0; // Reset reconnect attempts\r\n      };\r\n\r\n      socket.current.onmessage = (event) => {\r\n        const data = JSON.parse(event.data);\r\n        if (data.type === 'draw') {\r\n          console.log('Received drawing data:', data.payload);\r\n          util.enlivenObjects([data.payload], (objects) => {\r\n            objects.forEach((obj) => {\r\n              if (canvasInstance) {\r\n                canvasInstance.add(obj);\r\n              }\r\n            });\r\n          });\r\n        }\r\n      };\r\n\r\n      socket.current.onclose = () => {\r\n        console.warn('WebSocket connection closed.');\r\n        if (reconnectAttemptsRef.current < maxReconnectAttempts) {\r\n          reconnectAttemptsRef.current += 1;\r\n          console.warn(\r\n            `Reconnecting... (${reconnectAttemptsRef.current}/${maxReconnectAttempts})`\r\n          );\r\n          setTimeout(connectWebSocket, reconnectInterval);\r\n        } else {\r\n          console.error('Max reconnection attempts reached. Unable to reconnect.');\r\n        }\r\n      };\r\n\r\n      socket.current.onerror = (error) => {\r\n        console.error('WebSocket encountered an error:', error.message);\r\n      };\r\n    };\r\n\r\n    // Establish WebSocket connection\r\n    connectWebSocket();\r\n\r\n    // Enable drawing mode\r\n    canvasInstance.isDrawingMode = true;\r\n\r\n    // Handle drawing events\r\n    canvasInstance.on('path:created', (e) => {\r\n      const path = e.path;\r\n      emitObjectData(path);\r\n    });\r\n\r\n    // Emit data for WebSocket transmission\r\n    const emitObjectData = (object) => {\r\n      try {\r\n        if (socket.current && socket.current.readyState === WebSocket.OPEN) {\r\n          socket.current.send(\r\n            JSON.stringify({\r\n              type: 'draw',\r\n              payload: object.toJSON(),\r\n            })\r\n          );\r\n          console.log('Emitted object data:', object);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error emitting object data:', error.message);\r\n      }\r\n    };\r\n\r\n    // Cleanup on component unmount\r\n    return () => {\r\n      console.log('Cleaning up canvas and WebSocket...');\r\n      if (canvasInstance) {\r\n        canvasInstance.dispose();\r\n      }\r\n      if (socket.current) {\r\n        socket.current.close();\r\n      }\r\n    };\r\n  }, [documentUrl, sessionId]); // Reinitialize if documentUrl or sessionId changes\r\n\r\n  return (\r\n    <div>\r\n      <canvas ref={canvasRef} />\r\n      {!documentUrl && (\r\n        <p style={{ color: 'red' }}>No document available to load. Please check the session data.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DocumentCanvas;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}