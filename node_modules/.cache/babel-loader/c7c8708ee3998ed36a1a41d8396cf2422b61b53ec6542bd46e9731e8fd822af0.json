{"ast":null,"code":"import React,{useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const FetchSessionData=_ref=>{let{setSessionId,setDocumentUrl,setError}=_ref;useEffect(()=>{const fetchSessionData=async()=>{try{const response=await fetch('/api/get-session-id/');if(!response.ok)throw new Error('Failed to fetch session ID');const data=await response.json();console.log(\"Session ID from backend:\",data.sessionId);setSessionId(data.sessionId);console.log(\"Session ID set in state:\",data.sessionId);const sessionDataResponse=await fetch(`/api/session-data/${data.sessionId}/`);if(!sessionDataResponse.ok)throw new Error('Failed to fetch session data');const sessionData=await sessionDataResponse.json();console.log(\"Session data fetched:\",sessionData);setDocumentUrl(sessionData.documentUrl);}catch(error){console.error(\"Error in fetchSessionData:\",error);}};fetchSessionData();},[]);return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});};export default FetchSessionData;","map":{"version":3,"names":["React","useEffect","jsx","_jsx","FetchSessionData","_ref","setSessionId","setDocumentUrl","setError","fetchSessionData","response","fetch","ok","Error","data","json","console","log","sessionId","sessionDataResponse","sessionData","documentUrl","error","children"],"sources":["C:/Users/wesle/OneDrive/Documents/VLCS/myProject/VirtualLCS/frontend/src/FetchSessionData.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\n\r\nconst FetchSessionData = ({ setSessionId, setDocumentUrl, setError }) => {\r\n  useEffect(() => {\r\n    const fetchSessionData = async () => {\r\n      try {\r\n        const response = await fetch('/api/get-session-id/');\r\n        if (!response.ok) throw new Error('Failed to fetch session ID');\r\n        const data = await response.json();\r\n        \r\n        console.log(\"Session ID from backend:\", data.sessionId);\r\n        setSessionId(data.sessionId);\r\n        console.log(\"Session ID set in state:\", data.sessionId);\r\n  \r\n        const sessionDataResponse = await fetch(`/api/session-data/${data.sessionId}/`);\r\n        if (!sessionDataResponse.ok) throw new Error('Failed to fetch session data');\r\n        const sessionData = await sessionDataResponse.json();\r\n  \r\n        console.log(\"Session data fetched:\", sessionData);\r\n        setDocumentUrl(sessionData.documentUrl);\r\n      } catch (error) {\r\n        console.error(\"Error in fetchSessionData:\", error);\r\n      }\r\n    };\r\n  \r\n    fetchSessionData();\r\n  }, []);\r\n  \r\n\r\n  return <div>Loading...</div>;\r\n};\r\n\r\nexport default FetchSessionData;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEzC,KAAM,CAAAC,gBAAgB,CAAGC,IAAA,EAAgD,IAA/C,CAAEC,YAAY,CAAEC,cAAc,CAAEC,QAAS,CAAC,CAAAH,IAAA,CAClEJ,SAAS,CAAC,IAAM,CACd,KAAM,CAAAQ,gBAAgB,CAAG,KAAAA,CAAA,GAAY,CACnC,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,sBAAsB,CAAC,CACpD,GAAI,CAACD,QAAQ,CAACE,EAAE,CAAE,KAAM,IAAI,CAAAC,KAAK,CAAC,4BAA4B,CAAC,CAC/D,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAElCC,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAEH,IAAI,CAACI,SAAS,CAAC,CACvDZ,YAAY,CAACQ,IAAI,CAACI,SAAS,CAAC,CAC5BF,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAEH,IAAI,CAACI,SAAS,CAAC,CAEvD,KAAM,CAAAC,mBAAmB,CAAG,KAAM,CAAAR,KAAK,CAAC,qBAAqBG,IAAI,CAACI,SAAS,GAAG,CAAC,CAC/E,GAAI,CAACC,mBAAmB,CAACP,EAAE,CAAE,KAAM,IAAI,CAAAC,KAAK,CAAC,8BAA8B,CAAC,CAC5E,KAAM,CAAAO,WAAW,CAAG,KAAM,CAAAD,mBAAmB,CAACJ,IAAI,CAAC,CAAC,CAEpDC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAEG,WAAW,CAAC,CACjDb,cAAc,CAACa,WAAW,CAACC,WAAW,CAAC,CACzC,CAAE,MAAOC,KAAK,CAAE,CACdN,OAAO,CAACM,KAAK,CAAC,4BAA4B,CAAEA,KAAK,CAAC,CACpD,CACF,CAAC,CAEDb,gBAAgB,CAAC,CAAC,CACpB,CAAC,CAAE,EAAE,CAAC,CAGN,mBAAON,IAAA,QAAAoB,QAAA,CAAK,YAAU,CAAK,CAAC,CAC9B,CAAC,CAED,cAAe,CAAAnB,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}